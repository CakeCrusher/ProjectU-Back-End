{"version":3,"sources":["components/NavBar.js","components/PostsList.js","service/postsService.js","reducers/postsReducer.js","App.js","store.js","index.js"],"names":["NavBar","className","connect","state","posts","props","map","p","title","axios","get","then","refined","data","postsReducer","action","type","inititalizePosts","dispatch","a","async","postsService","useEffect","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","render","document","getElementById","subscribe"],"mappings":"8NAoBeA,G,MAjBA,WAEX,OACI,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,YAAf,SAGA,yBAAKA,UAAU,YAAf,YAGA,yBAAKA,UAAU,YAAf,c,OCSGC,eANS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAMC,SAINF,EAnBG,SAACG,GACf,OACI,6BACI,qCACA,4BACKA,EAAMD,MAAME,KAAI,SAAAC,GAAC,OACd,4BAAKA,EAAEC,e,kCCDZ,EALA,WAEX,OADiBC,IAAMC,IAHX,UAIIC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,SCe7BC,EARM,WAAyB,IAAxBX,EAAuB,uDAAf,GAAIY,EAAW,uCACzC,OAAQA,EAAOC,MACX,IAAK,aACD,OAAOD,EAAOF,KAEtB,OAAOV,GCKID,G,MAAAA,YACb,KACA,CAAEe,iBDtB4B,WAC5B,OAAO,SAAMC,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACiBE,KADjB,OACGjB,EADH,OAEHc,EAAS,CACLF,KAAM,aACNH,KAAMT,IAJP,wCCmBIF,EAfH,SAACG,GAMX,OALAiB,qBAAU,WACRjB,EAAMY,qBACL,IAID,6BACE,kBAAC,EAAD,MACA,2CACA,kBAAC,EAAD,W,eCZAM,EAAUC,YAAgB,CAC5BpB,MAAOU,IAQIW,EALDC,YACVH,EACAI,YAAgBC,MCLdC,EAAY,kBACdC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,UAGhCJ,IAEAJ,EAAMS,WAAU,kBACZL,S","file":"static/js/main.2650c131.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/navBar.css'\r\n\r\nconst NavBar = () => {\r\n    \r\n    return(\r\n        <div className='nav-container'>\r\n            <div className='nav-item'>\r\n                about\r\n            </div>\r\n            <div className='nav-item'>\r\n                policies\r\n            </div>\r\n            <div className='nav-item'>\r\n                contact\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PostsList = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Posts</h2>\r\n            <ul>\r\n                {props.posts.map(p => (\r\n                    <li>{p.title}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(PostsList)","import axios from 'axios'\r\nconst baseUrl = '/posts'\r\n\r\nconst getAll = () => {\r\n    const response = axios.get(baseUrl)\r\n    return response.then(refined => refined.data)\r\n}\r\n\r\nexport default {getAll}","import postsService from '../service/postsService'\r\n\r\nexport const inititalizePosts = () => {\r\n    return async dispatch => {\r\n        const posts = await postsService.getAll()\r\n        dispatch({\r\n            type: 'INIT_POSTS',\r\n            data: posts,\r\n        })\r\n    }\r\n}\r\n\r\nconst postsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'INIT_POSTS' :\r\n            return action.data\r\n    }\r\n    return state\r\n}\r\n\r\nexport default postsReducer","import React, {useEffect} from 'react'\nimport NavBar from './components/NavBar'\nimport PostsList from './components/PostsList'\nimport { inititalizePosts } from './reducers/postsReducer'\nimport { connect } from 'react-redux'\nimport './css/base.css'\n\nconst App = (props) => {\n  useEffect(() => {\n    props.inititalizePosts()\n  }, [])\n\n\n  return (\n    <div>\n      <NavBar />\n      <h1>Hello World</h1>\n      <PostsList />\n    </div>\n  );\n}\n\nexport default connect(\n  null,\n  { inititalizePosts }\n)(App)","import {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport postsReducer from './reducers/postsReducer'\r\n\r\nconst reducer = combineReducers({\r\n    posts: postsReducer,\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nconst renderApp = () => (\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    )\n)\nrenderApp()\n\nstore.subscribe(() => (\n    renderApp()\n))"],"sourceRoot":""}