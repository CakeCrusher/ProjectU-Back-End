{"version":3,"sources":["static/svg/userB.svg","static/svg/userW.svg","static/svg/plusB.svg","static/svg/logoB.svg","static/svg/handshakeB.svg","static/svg/exitB.svg","static/svg/userSB.svg","static/svg/bellB.svg","static/svg/heartB.svg","static/svg/bellW.svg","static/svg/heartW.svg","static/svg/internet.svg","static/svg/searchW.svg","static/svg/clockB.svg","static/svg/shareB.svg","static/svg/reloadB.svg","static/svg/shrinkB.svg","static/svg/pinB.svg","static/svg/clockW.svg","static/svg/handshakeW.svg","static/svg/plusW.svg","static/svg/shareW.svg","static/svg/reloadW.svg","static/svg/shrinkW.svg","static/svg/pinW.svg","static/svg/discord.svg","static/svg/facebook.svg","static/svg/linkedin.svg","static/svg/slack.svg","static/svg/whatsapp.svg","static/svg/trello.svg","static/svg/gitHub.svg","static/svg/infoW.svg","static/svg/infoB.svg","static/svg/logoW.svg","static/svg/moreSB.svg","static/svg/moreW.svg","static/svg/hamburger.svg","static/svg/searchSB.svg","static/svg/virusB.svg","static/svg/virusW.svg","static/svg/virusC.svg","static/svg/usaB.svg","static/svg/usaW.svg","static/svg/usaC.svg","reducers/currentUser.js","reducers/token.js","schemas.js","hooks/index.js","components/InputHeader.js","reducers/alertNotif.js","components/newUser/form/SignIn.js","components/newUser/form/Register.js","components/newUser/NotLogged.js","reducers/userForPage.js","components/post/PostSmall.js","components/ReferenceLink.js","components/Loading.js","components/user/logged/UserInfo.js","components/user/logged/NewUserNotif.js","components/user/logged/UserNotifList.js","components/user/logged/UserSP.js","components/newUser/Logged.js","components/newUser/UserContainer.js","components/SkillSugg.js","components/NavBar.js","components/SubNav.js","reducers/search.js","components/pages/Home.js","components/post/Post.js","reducers/posts.js","components/FormContainer.js","reducers/skillProposition.js","components/postPage/PostSkills.js","components/post/PostForm0.js","reducers/stretchLayout.js","reducers/eventSearch.js","components/pages/Results.js","components/postPage/PostImages.js","components/postPage/PostLinks.js","components/newPostPage/PostQandA.js","components/NewFormContainer.js","components/newPostPage/PostPage.js","components/post/PostSmallList.js","components/pages/UserPage.js","components/pages/PostFormPage.js","App.js","reducers/logInContainer.js","reducers/users.js","reducers/searchFilter.js","reducers/currentPost.js","store.js","index.js"],"names":["module","exports","setCurrentUser","user","dispatch","a","async","type","data","setCurrentUserPosts","posts","setCurrentUserSP","setCurrentUserNotifications","notifications","currentUser","state","action","pendingNotifications","savedPosts","setToken","token","clearToken","PENDING_NOTIFS","gql","Q_AND_A_NOTIFS","ASK_QUESTION","ANSWER_QUESTION","SEARCH_POSTS","SAVE_POST","REMOVE_SAVED_POST","LIST_OF_POSTS","FIND_POST","FIND_USER","CREATE_USER","LOGIN","MAKE_NOTIFICATION","ACCEPT_NOTIFICATION","DECLINE_NOTIFICATION","LIST_OF_NOTIFICATIONS","SKILL_SEARCH","CREATE_POST","DELETE_POST","triggerAlert","message","setAlert","resetAlert","cleanedMessage","style","margin","split","color","textColor","setTimeout","websiteStats","url","length","icon","internetIcon","title","start","includes","discordIcon","trelloIcon","whatsappIcon","slackIcon","linkedinIcon","facebookIcon","gitHubIcon","useField","useState","value","setValue","fields","onChange","event","target","reset","palletteGenerator","primaryColor","colors","map","c","Number","higherColor","join","colorPallette","userIcon","userIconW","clockIcon","clockIconW","handshakeIcon","handshakeIconW","plusIcon","plusIconW","shareIcon","shareIconW","reloadIcon","reloadIconW","shrinkIcon","shrinkW","pinIcon","pinW","colored","heartIcon","fill","viewBox","xmlns","d","id","enable-background","height","width","userIconB","clockIconB","handshakeIconB","plusIconB","shareIconB","reloadIconB","shrinkB","pinB","connect","props","expanded","setExpanded","info","htmlFor","inputFor","className","showInfo","display","colorInfo","infoIconB","infoIconW","onClick","src","alt","children","alertNotif","username","password","useMutation","onError","e","slice","signInMutation","bgStyle","noBG","backgroundColor","onSubmit","preventDefault","variables","result","changeMenuItem","login","localStorage","setItem","window","location","reload","handleSumbit","rePassword","email","referenceLink","console","log","registerMutation","marginBottom","userOption","setUserOption","optionStyle","signIn","register","formToShow","changeOption","changeTo","paddingRight","paddingLeft","userForPage","setPostsForUFP","postList","handleError","deletePostMutation","removeSPMutation","p","post","pallette","to","encodeURIComponent","_id","postId","newSavedPosts","filter","handleSaveRemove","gridTemplateColumns","referenceLinkContent","rl","href","size","logoB","logoW","id_list","query","reducer","postListConditions","useQuery","getListOfPosts","useEffect","newPostList","ind","push","gridColumn","overflowX","marginTop","key","acceptNotif","declineNotif","answerQuestion","answer","notif","notifStatusColor","accepted","userFrom","question","borderBottom","userTo","padding","marginLeft","GCLinkStats","contactLink","cleanedLink","skillToJoin","skillNames","proposedContribution","indexOf","notificationId","response","newNotifications","n","handleAnswer","decline","declineNotification","handleDecline","accept","acceptNotification","handleAccept","notifsListQuery","sentFilter","setSentFilter","showSFDD","setShowSFDD","statusFilter","setStatusFilter","showStatusDD","setShowStatusDD","notifsList","notifsListConditions","listOfNotifications","showNotifications","notifStatus","statusConditions","sentStatus","sentConditions","reverse","sentDD","o","statusDD","queryConditions","allSP","showUtilities","setShowUtilities","utilityShown","setUtilityShown","userQuery","getItem","userResult","findUser","userQueryConditions","changeUtilityShown","usernameIcon","substr","toUpperCase","iconToShow","basicStyles","userIconSB","bellIconB","following","heartIconB","bellIconW","heartIconW","pendingNotifStats","showInBanner","Fragment","clear","exitIcon","showBubble","showUtilityContent","logStateToShow","splitQuery","lastWord","skills","setSkills","skillSearchQuery","skillsList","skillSearch","suggestionsStyle","s","onSuggestionClicked","name","NavBar","menuItemShown","setMenuItemShown","changeUtility","item","linkToPush","enterQuery","history","handleKeyPress","skill","newQuery","onQueryChange","menuStyle","borderBottomColor","showWhenSB","alertBarStyle","logoIcon","searchIconW","onKeyPress","placeholder","searchIconB","hamburgerIcon","moreItemButton","moreIconW","moreIconB","notifItemButton","followingItemButton","modalItemButtons","i","withRouter","scrollTo","search","Home","setSearch","colorPalette","savePostMutation","handleSavePost","concat","mappedSkills","allSkills","skillFills","skillCapacities","cleanedTime","Date","time","toString","stretch","text","description","handleExpand","setBC","border","setTitle","setSkillProposition","arr","skillProposition","ppCount","reduce","t","ins","aa","propPointStyles","borderColor","propoitionPoints","capacity","tempFill","allPropositionPoints","propPoints","skillList","skillsData","si","dots","dotsAmt","di","opacity","skillName","skillCap","skillFill","skillsAvilable","sd","form","modifiedSkillProposition","proposeHelp","Array","PostForm0","setColor","setSkillName","skillNameList","setSkillNameList","skillCapacity","setSkillCapacity","skillCapList","setSkillCapList","imageLink","setImageLink","imageLinkList","setImageLinkList","setReferenceLink","referenceLinkList","setReferenceLinkList","createPost","heigherColor","colorsHTML","skillContribution","imageLinks","referenceLinks","postCreated","addPost","handleSubmit","toLowerCase","skillsHTML","newSkillNameList","newSkillCapList","newSkillProposition","removeSkill","allImages","newImageLinkList","removeImage","lineHeight","img","imagesHTML","allRL","newReferenceLinkList","removeRL","referenceLinksHTML","stretchLayout","eventSearch","addPosts","toggleStretchLayout","setEventSearch","currentIds","scrollAtBottom","setScrollAtBottom","decodedSearch","decodeURIComponent","filterString","postIds","eventQuery","innerHeight","scrollY","document","body","offsetHeight","addEventListener","postsSearched","queryTitles","reducerTitles","postChangeConditions","searchPosts","postsToShow","eventKeys","keyWord","postToShow","layoutBtnClass","layoutClass","eventsHTML","iconB","covidIconB","iconW","covidIconW","iconC","covidIconC","usaIconB","usaIconW","usaIconC","eventsContainerClass","imgShown","setImgShown","images","imagesAmt","setToImgShown","HIStyle","imageOptions","loading","links","linksToShow","l","stats","answerStyle","qanda","borderTopColor","currentPost","setCurrentPost","skillExpanded","setSkillExpanded","makeNotification","askQuestion","qandaQuery","postTitle","postQuery","searchAnsweredQToPost","qandaChangeConditions","findPost","qandaList","questionStyle","messageStyle","buttonToShown","userFromId","userToId","teamHTML","team","un","borderTop","setPosts","postListQuery","postListReady","userUsername","sendMessage","userConditions","websiteInfo","PostFormPage","groupContactLink","skillSelected","setSkillSelected","textAlign","skillMap","skillClass","skillArray","handleSkillSelect","siteStats","groupCommType","users","setPendingNotifications","amt","setQuery","currentUserId","pendingNotifsQuery","userId","pendingNotifs","searchAwaitingNotifs","exact","path","render","match","params","logInContainer","searchFilter","editedCurrentPost","proposedHelp","currentProposedHelp","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","getElementById","subscribe"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,gCCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,iBCA3CD,EAAOC,QAAU,IAA0B,sC,kBCA3CD,EAAOC,QAAU,IAA0B,qC,4DCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.93f9a83b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userB.7009aa6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/userW.ed5b87e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusB.bfcf8334.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoB.64434679.svg\";","module.exports = __webpack_public_path__ + \"static/media/handshakeB.6bd67093.svg\";","module.exports = __webpack_public_path__ + \"static/media/exitB.05c4ecc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/userSB.a5d32b59.svg\";","module.exports = __webpack_public_path__ + \"static/media/bellB.588bc93e.svg\";","module.exports = __webpack_public_path__ + \"static/media/heartB.777624b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bellW.174896b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/heartW.f55c0d88.svg\";","module.exports = __webpack_public_path__ + \"static/media/internet.0d4ae4dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchW.d8b44a52.svg\";","module.exports = __webpack_public_path__ + \"static/media/clockB.6e86b83b.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareB.ad96c977.svg\";","module.exports = __webpack_public_path__ + \"static/media/reloadB.134a00e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/shrinkB.e8dd8e77.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinB.be86de66.svg\";","module.exports = __webpack_public_path__ + \"static/media/clockW.7c5b7cd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/handshakeW.1da41e6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/plusW.2bfc3e79.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareW.d092b1e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/reloadW.cb1db4d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/shrinkW.ffa2fb6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinW.b140358d.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord.3f252d94.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.bf5eb2b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.656fa43d.svg\";","module.exports = __webpack_public_path__ + \"static/media/slack.ab3280f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.d05d98b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/trello.3e7fab08.svg\";","module.exports = __webpack_public_path__ + \"static/media/gitHub.4a8491aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/infoW.a6b1b5b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/infoB.df43d8cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoW.f6d9efd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/moreSB.56675ea3.svg\";","module.exports = __webpack_public_path__ + \"static/media/moreW.71298888.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.dab48eaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchSB.b45dc68a.svg\";","module.exports = __webpack_public_path__ + \"static/media/virusB.12ee8579.svg\";","module.exports = __webpack_public_path__ + \"static/media/virusW.cd6662e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/virusC.fe4dbfff.svg\";","module.exports = __webpack_public_path__ + \"static/media/usaB.5d860f9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/usaW.5eae163c.svg\";","module.exports = __webpack_public_path__ + \"static/media/usaC.50b417b2.svg\";","export const setCurrentUser = (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CURRENT_USER',\r\n            data: user\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentUserPosts = (posts) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CU_POSTS',\r\n            data: posts\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentUserSP = (posts) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CU_SP',\r\n            data: posts\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentUserNotifications = (notifications) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CU_NOTIFICATIONS',\r\n            data: notifications\r\n        })\r\n    }\r\n}\r\n\r\nexport const setPendingNotifications = (amt) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CU_PN',\r\n            data: amt\r\n        })\r\n    }\r\n}\r\n\r\nconst currentUser = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CU_PN':\r\n            return {...state, pendingNotifications: action.data}\r\n        case 'SET_CURRENT_USER' :\r\n            return action.data\r\n        case 'SET_CU_POSTS' :\r\n            return {...state, posts: action.data}\r\n        case 'SET_CU_SP' :\r\n            return {...state, savedPosts: action.data}\r\n        case 'SET_CU_NOTIFICATIONS' :\r\n            return {...state, notifications: action.data}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentUser","export const setToken = (token) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_TOKEN',\r\n            data: token\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearToken = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'CLEAR_TOKEN'\r\n        })\r\n    }\r\n}\r\n\r\nconst token = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TOKEN' :\r\n            return action.data\r\n        case 'CLEAR_TOKEN' :\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default token","import { gql } from 'apollo-boost'\r\n\r\nexport const PENDING_NOTIFS = gql`\r\n  query searchAwaitingNotifs($userId: ID!) {\r\n    searchAwaitingNotifs(userId: $userId)\r\n  }\r\n`\r\n\r\nexport const Q_AND_A_NOTIFS = gql`\r\n  query searchAnsweredQToPost ( $title: String! ) {\r\n    searchAnsweredQToPost (\r\n      title: $title\r\n    ){\r\n      userFrom{\r\n        username\r\n      }\r\n      userTo {\r\n        username\r\n      }\r\n      question\r\n      answer\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ASK_QUESTION = gql`\r\n  mutation askQuestion (\r\n    $userFromId: ID!,\r\n    $userToId: ID!,\r\n    $postId: ID!,\r\n    $question: String!\r\n  ){\r\n    askQuestion (\r\n      userFromId: $userFromId,\r\n      userToId: $userToId,\r\n      postId: $postId,\r\n      question: $question\r\n    ){\r\n      userFrom {\r\n        username\r\n        email\r\n      }\r\n      userTo {\r\n        username\r\n        email\r\n      }\r\n      message\r\n      post{\r\n        title\r\n        color\r\n        skillNames\r\n        skillFills\r\n        skillCapacities\r\n        _id\r\n      }\r\n      proposedContribution\r\n      question\r\n      answer\r\n      accepted\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ANSWER_QUESTION = gql`\r\n  mutation answerQuestion (\r\n    $notificationId: ID!,\r\n    $response: String!\r\n  ) {\r\n    answerQuestion (\r\n      notificationId: $notificationId,\r\n      response: $response\r\n    ){\r\n      userFrom {\r\n        username\r\n        email\r\n      }\r\n      userTo {\r\n        username\r\n        email\r\n      }\r\n      message\r\n      post{\r\n        title\r\n        color\r\n        skillNames\r\n        skillFills\r\n        skillCapacities\r\n        _id\r\n      }\r\n      proposedContribution\r\n      question\r\n      answer\r\n      accepted\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_POSTS = gql`\r\n  query{\r\n    allPosts{\r\n      title\r\n      user{\r\n        username\r\n        _id\r\n      }\r\n      skillNames\r\n      skillCapacities\r\n      skillFills\r\n      time\r\n      description\r\n      color\r\n      imageLinks\r\n      referenceLinks\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const SEARCH_POSTS = gql`\r\n  query searchPosts($filterString: String!, $postIds: [String!], $eventQuery: String){\r\n    searchPosts(filterString: $filterString, postIds: $postIds, eventQuery: $eventQuery){\r\n      title\r\n      user {\r\n        username\r\n      }\r\n      skillNames\r\n      skillCapacities\r\n      skillFills\r\n      time\r\n      description\r\n      color\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const SAVE_POST = gql`\r\n  mutation savePostToUser (\r\n    $user: ID!,\r\n    $postId: ID!\r\n  ) {\r\n    savePostToUser (user: $user, postId: $postId) {\r\n      username\r\n    }\r\n  }\r\n`\r\nexport const REMOVE_SAVED_POST = gql`\r\n  mutation removeSavedPost (\r\n    $user: ID!,\r\n    $postId: ID!\r\n  ) {\r\n    removeSavedPost (user: $user, postId: $postId)\r\n  }\r\n`\r\n\r\nexport const LIST_OF_POSTS = gql`\r\n  query getListOfPosts($id_list: [String]) {\r\n    getListOfPosts(idList: $id_list){\r\n      title\r\n      user{\r\n        username\r\n      }\r\n      color\r\n      skillFills\r\n      skillCapacities\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const FIND_POST = gql`\r\n  query findPost($title: String!){\r\n    findPost(title: $title){\r\n      title\r\n      user {\r\n        username\r\n        _id\r\n      }\r\n      skillNames\r\n      skillCapacities\r\n      skillFills\r\n      team\r\n      time\r\n      description\r\n      color\r\n      imageLinks\r\n      referenceLinks\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const FIND_USER = gql`\r\n  query findUser($username: String!){\r\n    findUser(username: $username) {\r\n      username\r\n      password\r\n      email\r\n      referenceLink\r\n      primarySkills{\r\n        name\r\n      }\r\n      secondarySkills{\r\n        name\r\n      }\r\n      interests\r\n      posts{\r\n        _id\r\n      }\r\n      notifications {\r\n        _id\r\n      }\r\n      savedPosts {\r\n        _id\r\n      }\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_USERS = gql`\r\n  query{\r\n    allUsers{\r\n      username\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser($username: String!, $password: String!, $email: String!, $referenceLink: String!) {\r\n    createUser(\r\n      username: $username,\r\n      password: $password,\r\n      email: $email,\r\n      referenceLink: $referenceLink\r\n    ){\r\n      username\r\n      password\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!){\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ){\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nexport const ME = gql`\r\n  query {\r\n    me{\r\n      username\r\n      email\r\n      referenceLink\r\n      primarySkills{\r\n        name\r\n      }\r\n      secondarySkills{\r\n        name\r\n      }\r\n      interests\r\n      posts{\r\n        title\r\n        skillCapacities\r\n        skillFills\r\n        _id\r\n      },\r\n      notifications{\r\n        userFrom{\r\n          _id\r\n        }\r\n        userTo{\r\n          _id\r\n        }\r\n        message\r\n        post{\r\n          title\r\n          _id\r\n        }\r\n        proposedContribution\r\n        accepted\r\n      }\r\n      _id\r\n\r\n    }\r\n  }\r\n`\r\n\r\nexport const MAKE_NOTIFICATION = gql`\r\n  mutation makeNotification(\r\n    $userFromId: ID!,\r\n    $userToId: ID!,\r\n    $message: String!,\r\n    $postId: ID,\r\n    $proposedContribution: [Int!]\r\n  ){\r\n    makeNotification(\r\n      userFromId: $userFromId,\r\n      userToId: $userToId,\r\n      message: $message,\r\n      postId: $postId,\r\n      proposedContribution: $proposedContribution\r\n    ){\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ACCEPT_NOTIFICATION = gql`\r\n  mutation acceptNotification($notificationId: ID!) {\r\n    acceptNotification(notificationId: $notificationId) {\r\n      userFrom {\r\n        username\r\n        email\r\n      }\r\n      userTo {\r\n        username\r\n        email\r\n      }\r\n      message\r\n      post{\r\n        title\r\n        color\r\n        skillNames\r\n        skillFills\r\n        skillCapacities\r\n      }\r\n      proposedContribution\r\n      accepted\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const DECLINE_NOTIFICATION = gql`\r\n  mutation declineNotification($notificationId: ID!) {\r\n    declineNotification(notificationId: $notificationId) {\r\n      userFrom {\r\n        username\r\n        email\r\n      }\r\n      userTo {\r\n        username\r\n        email\r\n      }\r\n      message\r\n      post{\r\n        title\r\n        color\r\n        skillNames\r\n        skillFills\r\n        skillCapacities\r\n      }\r\n      proposedContribution\r\n      accepted\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const LIST_OF_NOTIFICATIONS = gql`\r\n  query listOfNotifications($notifications: [String!]) {\r\n    listOfNotifications(notifications: $notifications) {\r\n      userFrom {\r\n        username\r\n        email\r\n      }\r\n      userTo {\r\n        username\r\n        email\r\n      }\r\n      message\r\n      post{\r\n        title\r\n        color\r\n        contactLink\r\n        skillNames\r\n        skillFills\r\n        skillCapacities\r\n        _id\r\n      }\r\n      proposedContribution\r\n      question\r\n      answer\r\n      accepted\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const SKILL_SEARCH = gql`\r\n  query skillSearch($filter: String!) {\r\n    skillSearch(filter: $filter) {\r\n      name\r\n      uses\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_POST = gql`\r\n  mutation addPost(\r\n    $title: String!,\r\n    $user: ID!,\r\n    $contactLink: String!\r\n    $skillNames: [String!]!,\r\n    $skillCapacities: [Int!]!,\r\n    $skillFills: [Int!]!,\r\n    $description: String!,\r\n    $color: String!,\r\n    $imageLinks: [String!],\r\n    $referenceLinks: [String!]\r\n  ){\r\n    addPost(\r\n      title:$title,\r\n      user:$user,\r\n      contactLink: $contactLink,\r\n      skillNames:$skillNames,\r\n      skillCapacities:$skillCapacities,\r\n      skillFills: $skillFills,\r\n      description:$description,\r\n      color:$color,\r\n      imageLinks:$imageLinks,\r\n      referenceLinks:$referenceLinks\r\n    ){\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_POST = gql`\r\n  mutation deletePost (\r\n    $postId: ID!\r\n  ) {\r\n    deletePost (postId: $postId)\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport userIconB from '../static/svg/userB.svg'\r\nimport clockIconB from '../static/svg/clockB.svg'\r\nimport handshakeIconB from '../static/svg/handshakeB.svg'\r\nimport plusIconB from '../static/svg/plusB.svg'\r\nimport shareIconB from '../static/svg/shareB.svg'\r\nimport reloadIconB from '../static/svg/reloadB.svg'\r\nimport shrinkB from '../static/svg/shrinkB.svg'\r\nimport pinB from '../static/svg/pinB.svg'\r\nimport userIconW from '../static/svg/userW.svg'\r\nimport clockIconW from '../static/svg/clockW.svg'\r\nimport handshakeIconW from '../static/svg/handshakeW.svg'\r\nimport plusIconW from '../static/svg/plusW.svg'\r\nimport shareIconW from '../static/svg/shareW.svg'\r\nimport reloadIconW from '../static/svg/reloadW.svg'\r\nimport shrinkW from '../static/svg/shrinkW.svg'\r\nimport pinW from '../static/svg/pinW.svg'\r\nimport discordIcon from '../static/svg/discord.svg'\r\nimport facebookIcon from '../static/svg/facebook.svg'\r\nimport internetIcon from '../static/svg/internet.svg'\r\nimport linkedinIcon from '../static/svg/linkedin.svg'\r\nimport slackIcon from '../static/svg/slack.svg'\r\nimport whatsappIcon from '../static/svg/whatsapp.svg'\r\nimport trelloIcon from '../static/svg/trello.svg'\r\nimport gitHubIcon from '../static/svg/gitHub.svg'\r\n\r\nexport const triggerAlert = (type, message, setAlert, resetAlert) => {\r\n    // triggerAlert('warning', 'success: alert bar is working', props.setAlert, props.resetAlert)\r\n    const cleanedMessage = <p style={{margin: 0}}><strong>{message.split('$:')[0]}</strong>: {message.split('$:')[1]}</p>\r\n    if (type === 'success') {\r\n        setAlert({color: 'rgb(52,166,95)', textColor: 'white', message: cleanedMessage})\r\n        setTimeout(() => resetAlert(), 3000)\r\n    }\r\n    if (type === 'warning') {\r\n        setAlert({color: 'rgb(226,184,59)', textColor: 'white', message: cleanedMessage})\r\n        setTimeout(() => resetAlert(), 5000)\r\n    }\r\n    if (type === 'danger') {\r\n        setAlert({color: 'rgb(254,52,77)', textColor: 'white', message: cleanedMessage})\r\n        setTimeout(() => resetAlert(), 3000)\r\n    }\r\n}\r\n\r\nexport const websiteStats = (url) => {\r\n    if (url.split('/').length < 3) {\r\n        return {icon: internetIcon, color: '#282828',title: 'unknown url'}\r\n    }\r\n    const start = url.split('/')[2]\r\n    if (start.includes('discord')) {\r\n        return {icon: discordIcon, color: '#7289DA', title: 'Discord'}\r\n    }\r\n    if (start.includes('trello')) {\r\n        return {icon: trelloIcon, color: '#0079BF', title: 'Trello'}\r\n    }\r\n    if (start.includes('whatsapp')) {\r\n        return {icon: whatsappIcon, color: '#25D366', title: 'WhatsApp'}\r\n    }\r\n    if (start.includes('monday')) {\r\n        return {icon: 'https://i.imgur.com/bgaQZc9.png', color: '#333333', title: 'Monday'}\r\n    }\r\n    if (start.includes('slack')) {\r\n        return {icon: slackIcon, color: '#4A154B', title: 'Slack'}\r\n    }\r\n    if (start.includes('linkedin')) {\r\n        return {icon: linkedinIcon, color: 'rgb(40,103,178)', title: 'LinkedIn'}\r\n    }\r\n    if (start.includes('facebook')) {\r\n        return {icon: facebookIcon, color: 'rgb(66,103,178)', title: 'Facebook'}\r\n    }\r\n    if (start.includes('indeed')) {\r\n        return {icon: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fgohire-website.s3.amazonaws.com%2Fimg%2Fintegration-logos%2Findeed-icon.jpg&f=1&nofb=1', color: '#282828', title: 'Indeed'}\r\n    }\r\n    if (start.includes('github')) {\r\n        return {icon: gitHubIcon, color: '#333', title: 'GitHub'}\r\n    }\r\n    return {icon: internetIcon, color: '#282828',title: 'unknown url'}\r\n}\r\n\r\nexport const useField = (type) => {\r\n    const [value, setValue] = useState('')\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n    } \r\n\r\n    const reset = () => {\r\n        setValue('')\r\n    }\r\n\r\n    return {\r\n        fields: {\r\n            type,\r\n            value,\r\n            onChange\r\n        },\r\n        reset\r\n    }\r\n}\r\n\r\nexport const palletteGenerator = (primaryColor) => {\r\n    const color = primaryColor\r\n    const colors = color.split('(')[1].split(')')[0].split(',').map(c => Number(c))\r\n    const higherColor = `rgb(${colors.map(c => c + 30).join(',')})`\r\n    let isDark = ((colors[0] + colors[1] + colors[2]) / 3) < 127 ?\r\n        true : false\r\n    // const isDark = false\r\n    const colorPallette = isDark ? \r\n        {\r\n            textColor: 'white',\r\n            color,\r\n            higherColor,\r\n            userIcon: userIconW,\r\n            clockIcon: clockIconW,\r\n            handshakeIcon: handshakeIconW,\r\n            plusIcon: plusIconW,\r\n            shareIcon: shareIconW,\r\n            reloadIcon: reloadIconW,\r\n            shrinkIcon: shrinkW,\r\n            pinIcon: pinW,\r\n            colored: {\r\n                heartIcon: <svg fill={color} viewBox=\"0 -28 512.00002 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"/></svg>,\r\n                shareIcon: <svg fill={color} viewBox=\"0 -22 512 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 233.820312-212.777344-233.320312v139.203125h-45.238281c-140.273437 0-253.984375 113.710937-253.984375 253.984375v73.769531l20.09375-22.019531c68.316406-74.851562 164.980469-117.5 266.324219-117.5h12.804687v139.203125zm0 0\"/></svg>,\r\n                handshakeIcon: <svg fill={color} id=\"Capa_1\" enable-background=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m386.158 8.733c-5.858-5.858-15.355-5.858-21.213 0l-36.478 36.478c-19.923-10.769-45.386-7.748-62.199 9.065l-69.416 69.416c-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l25.09-25.09c38.912 32.448 92.273 42.6 140.591 26.252l66.82 66.82c8.376-18.192 5.834-40.216-7.65-56.069l35.058-35.058c5.858-5.858 5.858-15.355 0-21.213-.101-.101-.211-.187-.315-.284l.015-.015z\"/><path d=\"m276.459 400.011c-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.846 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0l-46.272 46.272c-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l46.272-46.272c14.044-14.043 14.044-36.807.003-50.848z\"/><path d=\"m276.16 188.504-7.248 7.248c-25.715 25.715-67.558 25.715-93.273 0s-25.715-67.558 0-93.273l57.514-57.514c-16.157-6.188-34.547-4.891-49.768 3.892l-36.329-36.329c-5.858-5.858-15.355-5.858-21.213 0l-121.45 121.449c-5.858 5.858-5.858 15.355 0 21.213l36.329 36.329c-8.783 15.221-10.08 33.611-3.892 49.768l15.029-15.029c25.715-25.715 67.558-25.715 93.273 0 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854s15.314 20.895 17.854 32.993c12.098 2.54 23.618 8.48 32.992 17.853 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854 25.715 25.715 25.715 67.558 0 93.273l-18.562 18.562 6.497 6.497c14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847l-84.475-84.475c-43.996 9.707-89.992 2.097-128.358-20.761z\"/></g></svg>,\r\n            }\r\n        }\r\n        :\r\n        {\r\n            textColor: '#282828',\r\n            color,\r\n            higherColor,\r\n            userIcon: userIconB,\r\n            clockIcon: clockIconB,\r\n            handshakeIcon: handshakeIconB,\r\n            plusIcon: plusIconB,\r\n            shareIcon: shareIconB,\r\n            reloadIcon: reloadIconB,\r\n            shrinkIcon: shrinkB,\r\n            pinIcon: pinB,\r\n            colored: {\r\n                heartIcon: <svg fill={color} viewBox=\"0 -28 512.00002 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"/></svg>,\r\n                shareIcon: <svg fill={color} viewBox=\"0 -22 512 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 233.820312-212.777344-233.320312v139.203125h-45.238281c-140.273437 0-253.984375 113.710937-253.984375 253.984375v73.769531l20.09375-22.019531c68.316406-74.851562 164.980469-117.5 266.324219-117.5h12.804687v139.203125zm0 0\"/></svg>,\r\n                handshakeIcon: <svg fill={color} id=\"Capa_1\" enable-background=\"new 0 0 512 512\" height=\"512\" viewBox=\"0 0 512 512\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m386.158 8.733c-5.858-5.858-15.355-5.858-21.213 0l-36.478 36.478c-19.923-10.769-45.386-7.748-62.199 9.065l-69.416 69.416c-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l25.09-25.09c38.912 32.448 92.273 42.6 140.591 26.252l66.82 66.82c8.376-18.192 5.834-40.216-7.65-56.069l35.058-35.058c5.858-5.858 5.858-15.355 0-21.213-.101-.101-.211-.187-.315-.284l.015-.015z\"/><path d=\"m276.459 400.011c-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.846 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0l-46.272 46.272c-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l46.272-46.272c14.044-14.043 14.044-36.807.003-50.848z\"/><path d=\"m276.16 188.504-7.248 7.248c-25.715 25.715-67.558 25.715-93.273 0s-25.715-67.558 0-93.273l57.514-57.514c-16.157-6.188-34.547-4.891-49.768 3.892l-36.329-36.329c-5.858-5.858-15.355-5.858-21.213 0l-121.45 121.449c-5.858 5.858-5.858 15.355 0 21.213l36.329 36.329c-8.783 15.221-10.08 33.611-3.892 49.768l15.029-15.029c25.715-25.715 67.558-25.715 93.273 0 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854s15.314 20.895 17.854 32.993c12.098 2.54 23.618 8.48 32.992 17.853 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854 25.715 25.715 25.715 67.558 0 93.273l-18.562 18.562 6.497 6.497c14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847l-84.475-84.475c-43.996 9.707-89.992 2.097-128.358-20.761z\"/></g></svg>,\r\n            }\r\n        }\r\n    return {\r\n        colorPallette\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport infoIconW from '../static/svg/infoW.svg'\r\nimport infoIconB from '../static/svg/infoB.svg'\r\nimport '../static/css/inputHeader.css'\r\n\r\nconst InputHeader = (props) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    if (!props.info) {\r\n        return <label htmlFor={props.inputFor}><h3 className=\"info-title-text\">{props.title}</h3></label>\r\n    }\r\n\r\n    const showInfo = expanded ? {display: 'block'} : {display: 'none'} \r\n    const colorInfo = props.color === 'white' ?\r\n        {textColor: '#282828', icon: infoIconB} : {textColor: 'white', icon: infoIconW}\r\n    return (\r\n        <div className=\"form-info-container\" style={{color: colorInfo.textColor}}>\r\n            <div className=\"info-header-container\">\r\n                <label htmlFor={props.inputFor}><h3 className=\"info-title-text\">{props.title}</h3></label>\r\n                <img onClick={() => setExpanded(!expanded)} src={colorInfo.icon} className=\"info-icon\" alt=\"info\" />\r\n            </div>\r\n            <div className=\"info-content\" style={showInfo}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(InputHeader)","export const setAlert = (info) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_ALERT',\r\n            data: info\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetAlert = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'RESET_ALERT'\r\n        })\r\n    }\r\n}\r\n\r\nconst alertNotif = (state = {color: null, textColor: null, message: null}, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ALERT' :\r\n            return action.data\r\n        case 'RESET_ALERT' :\r\n            return {color: null, textColor: null, message: null}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default alertNotif","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { LOGIN } from '../../../schemas'\r\nimport { useField, triggerAlert } from '../../../hooks/index'\r\nimport { setToken } from '../../../reducers/token'\r\nimport InputHeader from '../../InputHeader'\r\nimport { setAlert, resetAlert } from '../../../reducers/alertNotif'\r\n\r\nconst SignIn = (props) => {\r\n    const username = useField('text')\r\n    const password = useField('password')\r\n\r\n    const onError = (e) => {\r\n        let cleanedMessage = e.message\r\n        cleanedMessage = cleanedMessage.split(':')\r\n        cleanedMessage = cleanedMessage.slice(1, cleanedMessage.length).join('$:')\r\n        triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert)\r\n    }\r\n    const [signInMutation] = useMutation(LOGIN, { onError })\r\n    \r\n    const handleSumbit = async (e) => {\r\n        e.preventDefault()\r\n        const result = await signInMutation({\r\n            variables: {\r\n                username: username.fields.value,\r\n                password: password.fields.value\r\n            }\r\n        })\r\n\r\n        if (result) {\r\n            if (props.changeMenuItem) {\r\n                props.changeMenuItem(null)\r\n            }\r\n            const token = result.data.login.value\r\n            username.reset()\r\n            password.reset()\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('username', username.fields.value)\r\n            props.setToken(token)\r\n            window.location.reload()\r\n        }\r\n    }\r\n\r\n    const bgStyle = props.noBG ? {backgroundColor: '#282828'} : null\r\n\r\n    return (\r\n        <div className=\"user-form-container\" style={bgStyle}>\r\n            <form className=\"user-form\" onSubmit={(e) => handleSumbit(e)}>\r\n                <InputHeader inputFor=\"SI-username\" info={false} title=\"username\" color=\"dark\" />\r\n                <input className=\"UF-input\" {...username.fields} id=\"SI-username\" />\r\n                <InputHeader inputFor=\"SI-password\" info={false} title=\"password\" color=\"dark\" />\r\n                <input className=\"UF-input\" {...password.fields} id=\"SI-password\" />\r\n                <button className=\"UF-submit\" type=\"submit\"><h3>sign in</h3></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n        \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null,\r\n    { setToken, setAlert, resetAlert }\r\n)(SignIn)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { CREATE_USER } from '../../../schemas'\r\nimport InputHeader from '../../InputHeader'\r\nimport { useField, triggerAlert } from '../../../hooks/index'\r\nimport { setAlert, resetAlert } from '../../../reducers/alertNotif'\r\n\r\nconst Register = (props) => {\r\n    const username = useField('text')\r\n    const password = useField('password')\r\n    const rePassword = useField('password')\r\n    const email = useField('email')\r\n    const referenceLink = useField('url')\r\n\r\n    const onError = (e) => {\r\n        let cleanedMessage = e.message\r\n        console.log(referenceLink.fields.value)\r\n        console.log(e.message)\r\n        if (cleanedMessage.includes('username')) cleanedMessage = `username$: ${username.fields.value} is already being used`\r\n        if (cleanedMessage.includes('referenceLink')) cleanedMessage = `reference link$: ${referenceLink.fields.value} is already being used`\r\n        if (cleanedMessage.includes('email')) cleanedMessage = `email$: ${email.fields.value} is already being used`\r\n        triggerAlert('warning', cleanedMessage, props.setAlert, props.resetAlert)\r\n    }\r\n\r\n    const [registerMutation] = useMutation(CREATE_USER, { onError })\r\n    \r\n    const handleSumbit = async (e) => {\r\n        e.preventDefault()\r\n        if (password.fields.value !== rePassword.fields.value) {\r\n            triggerAlert('warning', 'password$: password and re-password did not match', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        const result = await registerMutation({\r\n            variables: {\r\n                username: username.fields.value,\r\n                password: password.fields.value,\r\n                email: email.fields.value,\r\n                referenceLink: referenceLink.fields.value,\r\n            }\r\n        })\r\n        \r\n        if (result) {\r\n            if (props.changeMenuItem) {\r\n                props.changeMenuItem(null)\r\n            }\r\n            username.reset()\r\n            password.reset()\r\n            rePassword.reset()\r\n            email.reset()\r\n            referenceLink.reset()\r\n            triggerAlert('success', 'registered$: account successfully created', props.setAlert, props.resetAlert)\r\n            console.log('registered')\r\n        }\r\n    }\r\n\r\n    const bgStyle = props.noBG ? {backgroundColor: '#282828'} : null\r\n\r\n    return (\r\n        <div className=\"user-form-container\" style={bgStyle}>\r\n            <form className=\"user-form\" onSubmit={(e) => handleSumbit(e)}>\r\n                <InputHeader inputFor=\"SI-username\" info={false} title=\"username\" color=\"dark\" />\r\n                <input className=\"UF-input\" {...username.fields} id=\"SI-username\" />\r\n                <InputHeader inputFor=\"SI-password\" info={false} title=\"password\" color=\"dark\" />\r\n                <input className=\"UF-input\" {...password.fields} id=\"SI-password\" />\r\n                <InputHeader inputFor=\"SI-rePassword\" info={false} title=\"re-type password\" color=\"dark\" />\r\n                <input className=\"UF-input\" {...rePassword.fields} id=\"SI-rePassword\" />\r\n                <InputHeader inputFor=\"SI-email\" info={true} title=\"email\" color=\"dark\" >\r\n                    <ul style={{margin: 0}}>\r\n                        <li>untill further policy changes no emails are sent your way</li>\r\n                        <li>only shown to users who you accept after contacting you directly (not through post)</li>\r\n                    </ul>\r\n                </InputHeader>\r\n                <input className=\"UF-input\" {...email.fields} id=\"SI-email\" />\r\n                <InputHeader inputFor=\"SI-referenceLink\" info={true} title=\"reference link\" color=\"dark\" >\r\n                    <p style={{margin: 0, marginBottom: '5px'}}>link on your user page used as a resume to demonstrate your ability</p>\r\n                    <p style={{margin: 0, marginBottom: '5px'}}><strong>always view another users reference link before working with them</strong></p>\r\n                    <ul style={{margin: 0}}>\r\n                        <li>sites recommended: <strong>LinkedIn</strong>, <strong>Indeed</strong>, <strong>GitHub</strong>, or <strong>Facebook</strong></li>\r\n                        <li>to further ensure your reference link is trustworthy, link your ProjectU accout from your reference link</li>\r\n                    </ul>\r\n                </InputHeader>\r\n                <input className=\"UF-input\" {...referenceLink.fields} id=\"SI-referenceLink\" />\r\n                <button className=\"UF-submit\" type=\"submit\"><h3>register</h3></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null,\r\n    { setAlert, resetAlert }\r\n)(Register)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../static/css/newUser.css'\r\nimport userIcon from '../../static/svg/userW.svg'\r\nimport SignIn from './form/SignIn'\r\nimport Register from './form/Register'\r\n\r\n\r\nconst NotLogged = (props) => {\r\n    const [userOption, setUserOption] = useState(null)\r\n\r\n    const optionStyle = userOption ? \r\n        userOption === 'sign in' ?\r\n            {signIn: {backgroundColor: '#484848', color: 'white'}, register: null}\r\n            :\r\n            {signIn: null, register: {backgroundColor: '#484848', color: 'white'}}\r\n        : {signIn: null, register: null}\r\n\r\n    const formToShow = userOption ? \r\n        userOption === 'sign in' ?\r\n            <SignIn /> : <Register />\r\n        : null\r\n\r\n    const changeOption = (changeTo) => {\r\n        if (userOption === changeTo) {\r\n            setUserOption(null)\r\n        } else {\r\n            setUserOption(changeTo)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"user-container NL-user-container\">\r\n            <div onClick={() => changeOption('sign in')} className=\"user-option-container\" style={optionStyle.signIn}>\r\n                <h3 className=\"user-options\" style={{paddingRight: '10px'}}>sign in</h3>\r\n            </div>\r\n            <div className=\"user-options-splitter\">\r\n                <div className=\"user-icon-container\">\r\n                    <img src={userIcon} className=\"user-icon\" alt=\"user\" />\r\n                </div>\r\n            </div>\r\n            <div onClick={() => changeOption('register')} className=\"user-option-container\" style={optionStyle.register}>\r\n                <h3 className=\"user-options\" style={{paddingLeft: '10px'}}>register</h3>\r\n            </div>\r\n            {formToShow}\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(NotLogged)","export const setUserForPage = (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_USER_FOR_PAGE',\r\n            data: user\r\n        })\r\n    }\r\n}\r\n\r\nexport const setPostsForUFP = (postList) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_POSTS_FOR_UFP',\r\n            data: postList\r\n        })\r\n    }\r\n}\r\n\r\nconst userForPage = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER_FOR_PAGE' :\r\n            return action.data\r\n        case 'SET_POSTS_FOR_UFP' :\r\n            return {...state, posts: action.data}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userForPage","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { palletteGenerator, triggerAlert } from '../../hooks/index'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { DELETE_POST, REMOVE_SAVED_POST } from '../../schemas'\r\nimport userIcon from '../../static/svg/userB.svg'\r\nimport { setCurrentUserPosts, setCurrentUserSP } from '../../reducers/currentUser'\r\nimport { setPostsForUFP } from '../../reducers/userForPage'\r\nimport { setAlert, resetAlert } from '../../reducers/alertNotif'\r\n\r\nconst PostSmall = (props) => {\r\n    const handleError = (e) => {\r\n        console.log(e)\r\n    }\r\n    const [ deletePostMutation ] = useMutation(DELETE_POST, {\r\n        onError: handleError\r\n    })\r\n    const [ removeSPMutation ] = useMutation(REMOVE_SAVED_POST, {\r\n        onError: handleError\r\n    })\r\n    const p = props.post\r\n    const pallette = palletteGenerator(p.color).colorPallette\r\n    const handleRemove = async () => {\r\n        console.log(props.post._id)\r\n        const result = await deletePostMutation({\r\n            variables: {postId: props.post._id}\r\n        })\r\n        if (result) {\r\n            props.setCurrentUserPosts(props.currentUser.posts.filter(p => p._id !== props.post._id))\r\n            triggerAlert('danger', `deleted post$: deleted ${p.title} post`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    const handleSaveRemove = async () => {\r\n        const result = await removeSPMutation({\r\n            variables: {\r\n                user: props.currentUser._id,\r\n                postId: p._id\r\n            }\r\n        })\r\n        if (result) {\r\n            const newSavedPosts = props.currentUser.savedPosts.filter(post => post._id !== p._id)\r\n            props.setCurrentUserSP(newSavedPosts)\r\n            triggerAlert('danger', `unfollowed post$: unfollowed ${p.title}`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    \r\n    if (props.type === 'saved') {\r\n        return (\r\n            <div className=\"post-wrapper-sm\">\r\n                <div className=\"post-color-indicator\" style={{backgroundColor: pallette.color}} />\r\n                <div className=\"post-container\">\r\n                    <div className=\"post-header\">\r\n                        <Link to={`/user/${encodeURIComponent(p.user.username)}`} className=\"PH-user neutralize-link \">\r\n                            <img className=\"PHU-icon\" src={userIcon} alt=\"user\" />\r\n                            <div>{p.user.username}</div>\r\n                        </Link>\r\n                    </div>\r\n                    <Link to={`/post/${encodeURIComponent(p.title)}`} className=\"neutralize-link\"><h3 className=\"post-title\" style={{marginBottom: '7px'}}>{p.title}</h3></Link>\r\n                </div>\r\n                <div onClick={() => handleSaveRemove()} className=\"post-sm-remove\">x</div>\r\n            </div>\r\n        )\r\n    }\r\n    if (props.currentUser && p.user) {\r\n        if (p.user.username === props.currentUser.username) {\r\n            return (\r\n                <div className=\"post-wrapper-sm\">\r\n                    <div className=\"post-color-indicator\" style={{backgroundColor: pallette.color}} />\r\n                    <div className=\"post-container\">\r\n                        <div className=\"post-header\">\r\n                            <Link to={`/user/${encodeURIComponent(p.user.username)}`} className=\"PH-user neutralize-link \">\r\n                                <img className=\"PHU-icon\" src={userIcon} alt=\"user\" />\r\n                                <div>{p.user.username}</div>\r\n                            </Link>\r\n                        </div>\r\n                        <Link to={`/post/${encodeURIComponent(p.title)}`} className=\"neutralize-link\"><h3 className=\"post-title\" style={{marginBottom: '7px'}}>{p.title}</h3></Link>\r\n                    </div>\r\n                    <div onClick={() => handleRemove()} className=\"post-sm-remove\">x</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-wrapper-sm\" style={{gridTemplateColumns: '8px auto'}}>\r\n            <div className=\"post-color-indicator\" style={{backgroundColor: pallette.color}} />\r\n            <div className=\"post-container\">\r\n                <div className=\"post-header\">\r\n                    <Link to={`/user/${encodeURIComponent(props.user)}`} className=\"PH-user neutralize-link \">\r\n                        <img className=\"PHU-icon\" src={userIcon} alt=\"user\" />\r\n                        <div>{props.user}</div>\r\n                    </Link>\r\n                </div>\r\n                <Link to={`/post/${encodeURIComponent(p.title)}`} className=\"neutralize-link\"><h3 className=\"post-title\" style={{marginBottom: '7px'}}>{p.title}</h3></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser,\r\n        userForPage: state.userForPage\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserPosts, setCurrentUserSP, setPostsForUFP, setAlert, resetAlert }\r\n)(PostSmall)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { websiteStats } from '../hooks/index'\r\n\r\nconst ReferenceLink = (props) => {\r\n    const referenceLinkContent = websiteStats(props.rl)\r\n    \r\n    return (\r\n        <div className=\"referenceLink-container\" style={{backgroundColor: referenceLinkContent.color}}>\r\n            <img src={referenceLinkContent.icon} className=\"RL-icon\" alt={referenceLinkContent.title} />\r\n            <a href={props.rl} className=\"RL-link neutralize-link\" style={{color: referenceLinkContent.color}}><h4 style={{margin: 'auto'}}>{props.rl}</h4></a>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(ReferenceLink)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport logoB from '../static/svg/logoB.svg'\r\nimport logoW from '../static/svg/logoW.svg'\r\n\r\nconst Loading = (props) => {\r\n    if (props.size === 'small') {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <img src={logoB} className=\"loading-logo\" alt=\"loading logo\" />\r\n                <h1>loading</h1>\r\n            </div>\r\n        )\r\n    }\r\n    if (props.color === 'white') {\r\n        return (\r\n        <div className=\"loading-container\" style={{color: 'white'}}>\r\n            <div className=\"navbar-height\" />\r\n            <img src={logoW} className=\"loading-logo-l\" alt=\"loading logo\" />\r\n            <h1 className=\"loading-title\">loading</h1>\r\n        </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <div className=\"navbar-height\" />\r\n            <img src={logoB} className=\"loading-logo-l\" alt=\"loading logo\" />\r\n            <h1 className=\"loading-title\">loading</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(Loading)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_POSTS } from '../../../schemas'\r\nimport { setCurrentUserPosts } from '../../../reducers/currentUser'\r\nimport PostSmall from '../../post/PostSmall'\r\nimport ReferenceLink from '../../ReferenceLink'\r\nimport Loading from '../../Loading'\r\n\r\nconst UserInfo = (props) => {\r\n    const id_list = props.currentUser.posts.map(p => p._id)\r\n    const postsQuery = useQuery(LIST_OF_POSTS, {\r\n        variables: {id_list}\r\n    })\r\n    const postListConditions = (query, reducer) => {\r\n        if (!query) return null\r\n        if (query.length > 0) {\r\n            if (reducer[0].title) return null\r\n        }\r\n        return query\r\n    }\r\n    const postList = postListConditions(postsQuery.data.getListOfPosts, props.currentUser.posts)\r\n    useEffect(() => {\r\n        if (postList) {\r\n            let newPostList = []\r\n            for (const ind in postList) {\r\n                newPostList.push({...postList[ind], _id: id_list[ind]})\r\n            }\r\n            props.setCurrentUserPosts(newPostList)\r\n        }\r\n    })\r\n    if (props.currentUser.posts.length > 0 && !props.currentUser.posts[0].title){\r\n        return (\r\n            <div style={{gridColumn: '1/3'}}>\r\n                <div style={{height: '5vh'}}/>\r\n                <Loading color=\"white\" />\r\n            </div>\r\n        )\r\n    }\r\n    const showUserPosts = () => props.currentUser.posts.map(p => {\r\n        return (\r\n            <PostSmall post={p} user={p.user.username}   key={`UPS${p.title}`}/>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <div className=\"userUtil-info\">\r\n            <h3>{props.currentUser.username}</h3>\r\n            <h3 style={{overflowX: 'hidden'}}>{props.currentUser.email}</h3>\r\n            <ReferenceLink rl={props.currentUser.referenceLink} />\r\n            <div className=\"custom-hr\" style={{backgroundColor: '#282828', marginTop: '20px'}} />\r\n            <h2>posts</h2>\r\n            {showUserPosts()}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser,\r\n        posts: state.posts\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserPosts }\r\n)(UserInfo)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport userIcon from '../../../static/svg/userB.svg'\r\nimport PostSmall from '../../post/PostSmall'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { ACCEPT_NOTIFICATION, DECLINE_NOTIFICATION, ANSWER_QUESTION } from '../../../schemas'\r\nimport { setCurrentUserNotifications } from '../../../reducers/currentUser'\r\nimport { setAlert, resetAlert } from '../../../reducers/alertNotif'\r\nimport { useField, websiteStats, triggerAlert } from '../../../hooks/index'\r\nimport '../../../static/css/newNotifs.css'\r\n\r\nconst NewUserNotif = (props) => {\r\n    const handleError = (e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    const [acceptNotif] = useMutation(ACCEPT_NOTIFICATION, {\r\n        onError: handleError\r\n    })\r\n    const [declineNotif] = useMutation(DECLINE_NOTIFICATION, {\r\n        onError: handleError\r\n    })\r\n    const [answerQuestion] = useMutation(ANSWER_QUESTION, {\r\n        onError: handleError\r\n    })\r\n\r\n    const answer = useField('text')\r\n\r\n    const handleAnswer = async () => {\r\n        const result = await answerQuestion({\r\n            variables: {\r\n                notificationId: props.notif._id,\r\n                response: answer.fields.value\r\n            }\r\n        })\r\n        if (result) {\r\n            const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? result.data.answerQuestion : n)\r\n            props.setCurrentUserNotifications(newNotifications)\r\n            answer.reset()\r\n            triggerAlert('success', `replied$: you have replied to ${props.notif.userFrom.username}'s question`, props.setAlert, props.resetAlert)\r\n        }\r\n\r\n    }\r\n\r\n    const handleAccept = async () => {\r\n        const accept = await acceptNotif({\r\n            variables: {notificationId: props.notif._id}\r\n        })\r\n        if (accept) {\r\n            const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? accept.data.acceptNotification : n)\r\n            props.setCurrentUserNotifications(newNotifications)\r\n            triggerAlert('success', `accepted$: you have accepted ${props.notif.userFrom.username} to your team`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    const handleDecline = async () => {\r\n        const decline = await declineNotif({\r\n            variables: {notificationId: props.notif._id}\r\n        })\r\n\r\n        if (decline) {\r\n            const newNotifications = props.currentUser.notifications.map(n => n._id === props.notif._id ? decline.data.declineNotification : n)\r\n            props.setCurrentUserNotifications(newNotifications)\r\n            triggerAlert('danger', `declined$: you have declined ${props.notif.userFrom.username}'s request to join`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    \r\n    const notif = props.notif\r\n    const notifStatusColor = notif.accepted === null ? \r\n        'rgb(226,184,59)' :\r\n        notif.accepted ?\r\n            notif.post ?\r\n                'rgb(52,166,95)' : '#8b8b8b' \r\n            : 'rgb(254,52,77)'\r\n    if (notif.userFrom.username === props.currentUser.username){\r\n        if (notif.accepted) {\r\n            if(notif.question) {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n                        <div className=\"n-notif-content-secondary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n                            <p className=\"n-notif-message\">{notif.question}</p>\r\n                        </div>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>answered</h3>\r\n                            <p className=\"n-notif-message\">{notif.answer}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            if (notif.post) {\r\n                const GCLinkStats = websiteStats(notif.post.contactLink)\r\n                const cleanedLink = notif.post.contactLink.split('/')[2]\r\n                const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} />\r\n                        <div className=\"n-notif-STJ-container\">\r\n                            <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n                        </div>\r\n                        <div className=\"n-notif-content-secondary\">\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                        <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>group/contact link</h3>\r\n                        <div className=\"n-button-container\">\r\n                            <a href={notif.post.contactLink} className=\"n-join-link n-SH\" style={{backgroundColor: GCLinkStats.color}}>\r\n                                <img src={GCLinkStats.icon} className=\"n-JL-icon\" alt={GCLinkStats.title}/>\r\n                                <h3>{cleanedLink}</h3>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent message</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        if (notif.accepted === null) {\r\n            if(notif.question) {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\r\n                        <div className=\"n-notif-user\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </div>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n                            <p className=\"n-notif-message\">{notif.question}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} />\r\n                        <div className=\"n-notif-STJ-container\">\r\n                            <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n                        </div>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            if(notif.question) {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent question</h3>\r\n                        <div className=\"n-notif-user\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </div>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n                            <p className=\"n-notif-message\">{notif.question}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>sent join request</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} />\r\n                        <div className=\"n-notif-STJ-container\">\r\n                            <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n                        </div>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (notif.accepted) {\r\n            if(notif.question) {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">from:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n                        <div className=\"n-notif-content-secondary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n                            <p className=\"n-notif-message\">{notif.question}</p>\r\n                        </div>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>answered</h3>\r\n                            <p className=\"n-notif-message\">{notif.answer}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            if (notif.post) {\r\n                const GCLinkStats = websiteStats(notif.post.contactLink)\r\n                const cleanedLink = notif.post.contactLink.split('/')[2]\r\n                const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">from:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} />\r\n                        <div className=\"n-notif-STJ-container\">\r\n                            <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n                        </div>\r\n                        <div className=\"n-notif-content-secondary\">\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                        <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>sent group/contact link</h3>\r\n                        <div className=\"n-button-container\">\r\n                            <a href={notif.post.contactLink} className=\"n-join-link n-SH\" style={{backgroundColor: GCLinkStats.color}}>\r\n                                <img src={GCLinkStats.icon} className=\"n-JL-icon\" alt={GCLinkStats.title}/>\r\n                                <h3>{cleanedLink}</h3>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved message</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">from:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n                        </Link>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        if (notif.accepted === null) {\r\n            if(notif.question) {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">from:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userFrom.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n                        <div className=\"n-notif-content-secondary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n                            <p className=\"n-notif-message\">{notif.question}</p>\r\n                        </div>\r\n                        <div className=\"n-notif-reply\">\r\n                            <h3 className=\"n-notif-title\">reply</h3>\r\n                            <textarea className=\"n-notif-reply-field\" {...answer.fields} />\r\n                            <div className=\"n-button-container\">\r\n                                <h3 onClick={() => handleAnswer()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>answer</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} />\r\n                        <div className=\"n-notif-STJ-container\">\r\n                            <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n                        </div>\r\n                        <div className=\"n-notif-content-secondary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                        <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>accept</h3>\r\n                        <div className=\"n-notif-AoD\">\r\n                            <h3 onClick={() => handleDecline()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(254,52,77)'}}>decline</h3>\r\n                            <h3 onClick={() => handleAccept()} className=\"n-AoD-option n-SH\" style={{backgroundColor: 'rgb(52,166,95)'}}>accept</h3>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            if(notif.question) {\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved question</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} style={{margin: 0, padding: 0}} />\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>question</h3>\r\n                            <p className=\"n-notif-message\">{notif.question}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                const skillToJoin = notif.post.skillNames[notif.proposedContribution.indexOf(1)]\r\n                return (\r\n                    <div className=\"n-notif-container\" style={{borderBottom: `5px solid ${notifStatusColor}`}}>\r\n                        <h3 className=\"n-notif-header\" style={{backgroundColor: notifStatusColor}}>recieved join request</h3>\r\n                        <Link to={`/user/${notif.userTo.username}`} className=\"n-notif-user neutralize-link\">\r\n                            <div className=\"NU-label\">to:</div>\r\n                            <img src={userIcon} className=\"NU-icon\" alt='user' />\r\n                            <div className=\"NU-username\">{notif.userTo.username}</div>\r\n                        </Link>\r\n                        <PostSmall post={notif.post} user={notif.userTo.username} />\r\n                        <div className=\"n-notif-STJ-container\">\r\n                            <div className=\"n-notif-STJ\">skill to join: <strong>{skillToJoin}</strong></div>\r\n                        </div>\r\n                        <div className=\"n-notif-content-primary\">\r\n                            <h3 className=\"n-notif-title\" style={{marginLeft: '15px'}}>message</h3>\r\n                            <p className=\"n-notif-message\">{notif.message}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserNotifications, setAlert, resetAlert }\r\n)(NewUserNotif)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_NOTIFICATIONS } from '../../../schemas'\r\nimport { setCurrentUserNotifications } from'../../../reducers/currentUser'\r\nimport NewUserNotif from './NewUserNotif'\r\nimport Loading from '../../Loading'\r\n\r\n\r\n\r\nconst UserNotifList = (props) => {\r\n    const notifsListQuery = useQuery(LIST_OF_NOTIFICATIONS, {\r\n        variables: {notifications: props.currentUser.notifications.map(n => n._id)}\r\n    })\r\n\r\n    const [sentFilter, setSentFilter] = useState('to you')\r\n    const [showSFDD, setShowSFDD] = useState(false)\r\n    const [statusFilter, setStatusFilter] = useState('pending')\r\n    const [showStatusDD, setShowStatusDD] = useState(false)\r\n\r\n    const notifsListConditions = (query, reducer) => {\r\n        if (!query) { return null }\r\n        if (reducer.length === 0) { return null }\r\n        if (reducer[0].userTo) {\r\n            if (query[0]._id === reducer[0]._id ) { return null }\r\n        }\r\n        return query\r\n    }\r\n    \r\n\r\n    const notifsList = notifsListConditions(notifsListQuery.data.listOfNotifications, props.currentUser.notifications)\r\n\r\n    useEffect(() => {\r\n        if (notifsList) {\r\n            props.setCurrentUserNotifications(notifsList)\r\n        }\r\n    }, [notifsList, props, props.setCurrentUserNotifications])\r\n\r\n    if (props.currentUser.notifications.length > 0) {\r\n        if (!props.currentUser.notifications[0].userTo) {\r\n            return (\r\n                <div style={{gridColumn: '1/3'}}>\r\n                    <div style={{height: '5vh'}}/>\r\n                    <Loading color=\"white\" />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const Filter = () => {\r\n        const sentOptions = () => {\r\n            const allOptions = ['from you', 'to you']\r\n            const onOptionClick = (option) => {\r\n                setSentFilter(option)\r\n                setShowSFDD(!showSFDD)\r\n            }\r\n            return allOptions.map(o => o !== sentFilter ? <div onClick={() => onOptionClick(o)} className=\"NF-DD-option\" key={`SFDD${o}`}>{o}</div> : null)\r\n        }\r\n        const sentDD = showSFDD ? (\r\n                <div className=\"NF-dropdown\">\r\n                    <div className=\"NF-splitter\" />\r\n                    {sentOptions()}\r\n                </div>\r\n            ): null\r\n\r\n        const statusOptions = () => {\r\n            const allOptions = ['all', 'accepted', 'declined', 'pending', 'messages']\r\n            const onOptionClick = (option) => {\r\n                setStatusFilter(option)\r\n                setShowStatusDD(!showStatusDD)\r\n            }\r\n            return allOptions.map(o => o !== statusFilter ? <div onClick={() => onOptionClick(o)} className={`${o}-option NF-DD-option`} key={`StatusDD${o}`}>{o}</div> : null)\r\n        }\r\n        const statusDD = showStatusDD ? (\r\n                <div className=\"NF-dropdown\">\r\n                    <div className=\"NF-splitter\" />\r\n                    {statusOptions()}\r\n                </div>\r\n            ): null\r\n        return (\r\n            <div className=\"notif-filter-container\">\r\n                <div className=\"NF-creator-container\">\r\n                    <h4 className=\"NF-label\">status</h4>\r\n                    <div className=\"NF-option-container\">\r\n                        <div onClick={() => setShowStatusDD(!showStatusDD)} className={`${statusFilter}-option NF-option`}>{statusFilter}</div>\r\n                        {statusDD}\r\n                    </div>\r\n                </div>\r\n                <div className=\"NF-creator-container\" style={{marginLeft: '15px'}}>\r\n                    <h4 className=\"NF-label\">sent</h4>\r\n                    <div className=\"NF-option-container\">\r\n                        <div onClick={() => setShowSFDD(!showSFDD)} className=\"NF-option\">{sentFilter}</div>\r\n                        {sentDD}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const statusConditions = (notif) => {\r\n        if (statusFilter === 'all') return true\r\n        const notifStatus = notif.accepted === null ?\r\n            'pending' : \r\n            notif.accepted ?\r\n            notif.post ?\r\n                'accepted' : 'messages'\r\n            : 'declined'\r\n        if (statusFilter === notifStatus) return true\r\n        return false\r\n    }\r\n    const sentConditions = (notif) => {\r\n        if (sentFilter === 'all') return true\r\n        const sentStatus = notif.userFrom.username === props.currentUser.username ?\r\n            'from you' : 'to you'\r\n        if (sentFilter === sentStatus) return true\r\n        return false\r\n    }\r\n    const showNotifications = props.currentUser.notifications.map(n => {\r\n        if (statusConditions(n) && sentConditions(n)){\r\n            return <NewUserNotif notif={n} key={`UN${n._id}`}/>\r\n        }\r\n        return null\r\n    }).reverse()\r\n    return (\r\n        <div className=\"userUtil-notif\">\r\n            <Filter />\r\n            <div style={{height: '10px'}} />\r\n            {showNotifications}\r\n            <div style={{height: '10px'}} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserNotifications }\r\n)(UserNotifList)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_POSTS } from '../../../schemas'\r\nimport { setCurrentUserSP } from '../../../reducers/currentUser'\r\nimport PostSmall from '../../post/PostSmall'\r\nimport Loading from '../../Loading'\r\n\r\n\r\nconst UserSP = (props) => {\r\n    const id_list = props.currentUser.savedPosts.map(p => p._id)\r\n    const postListQuery = useQuery(LIST_OF_POSTS, {\r\n        variables: {id_list}\r\n    })\r\n    \r\n    const queryConditions = (query, reducer) => {\r\n        if (!query) return null\r\n        if (query.length === 0) return null\r\n        if (query[0] === null) return null\r\n        if (reducer[0].title)return null\r\n        if (query[0].title === reducer[0].title) return null\r\n        return query\r\n    }\r\n    \r\n    const postList = queryConditions(postListQuery.data.getListOfPosts, props.currentUser.savedPosts)\r\n    useEffect(()=> {\r\n        if (postList) {\r\n            let newPostList = []\r\n            for (const ind in postList) {\r\n                newPostList.push({...postList[ind], _id: id_list[ind]})\r\n            }\r\n            props.setCurrentUserSP(newPostList)\r\n        }\r\n    }, [postList, props.setCurrentUserSP, props, id_list])\r\n\r\n    if (props.currentUser.savedPosts.length > 0 && !props.currentUser.savedPosts[0].user) {\r\n        return (\r\n            <div style={{gridColumn: '1/3'}}>\r\n                <div style={{height: '5vh'}}/>\r\n                <Loading color=\"white\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const allSP = props.currentUser.savedPosts.map(p => <PostSmall post={p} user={p.user.username} type=\"saved\" key={`SP${p.title}`} />)\r\n    return (\r\n        <div>\r\n            <div style={{height: '10px'}} />\r\n            {allSP}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserSP }\r\n)(UserSP)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { FIND_USER } from '../../schemas'\r\nimport userIcon from '../../static/svg/userW.svg'\r\nimport { setCurrentUser } from '../../reducers/currentUser'\r\nimport { Link } from 'react-router-dom'\r\nimport { clearToken } from '../../reducers/token'\r\nimport exitIcon from '../../static/svg/exitB.svg'\r\nimport plusIcon from '../../static/svg/plusB.svg'\r\nimport userIconSB from '../../static/svg/userSB.svg'\r\nimport bellIconB from '../../static/svg/bellB.svg'\r\nimport heartIconB from '../../static/svg/heartB.svg'\r\nimport userIconW from '../../static/svg/userW.svg'\r\nimport bellIconW from '../../static/svg/bellW.svg'\r\nimport heartIconW from '../../static/svg/heartW.svg'\r\nimport UserInfo from '../user/logged/UserInfo'\r\nimport UserNotifList from '../user/logged/UserNotifList'\r\nimport UserSP from '../user/logged/UserSP'\r\nimport '../../static/css/userUtilities.css'\r\n\r\nconst Logged = (props) => {\r\n    const [showUtilities, setShowUtilities] = useState(true)\r\n    const [utilityShown, setUtilityShown] = useState('')\r\n\r\n    const userQuery = useQuery(FIND_USER, {\r\n        variables: {username: localStorage.getItem('username')}\r\n    })\r\n    const userQueryConditions = () => {\r\n        const query = userQuery.data.findUser\r\n        const reducer = props.currentUser\r\n        if (!query) { return null }\r\n        if (reducer) {\r\n            if (query.username === reducer.username) { return null }\r\n        }\r\n        return query\r\n    }\r\n    const userResult = userQueryConditions()\r\n\r\n    useEffect(() => {\r\n        if (userResult) {\r\n            props.setCurrentUser(userResult)\r\n        }\r\n    }, [props, props.currentUser, userResult])\r\n\r\n    if (!props.currentUser) {\r\n        return (\r\n            <div className=\"user-container LGD-user-container\">\r\n                <div className=\"user-options-splitter\">\r\n                    <div className=\"user-icon-container\">\r\n                        {/* <img src={userIcon} className=\"user-icon\" alt=\"user\" /> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"user-banner\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    const logout = () => {\r\n        localStorage.clear()\r\n        props.clearToken()\r\n    }\r\n\r\n    const changeUtilityShown = (changeTo) => {\r\n        if (changeTo === utilityShown) {\r\n            setUtilityShown(null)\r\n        }\r\n        else {\r\n            setUtilityShown(changeTo)\r\n        }\r\n        setShowUtilities(true)\r\n    }\r\n    const changeShowUtilities = (changeTo) => {\r\n        if (!changeTo) {\r\n            setShowUtilities(changeTo)\r\n            setUtilityShown(null)\r\n        }\r\n        else {\r\n            setShowUtilities(changeTo)\r\n        }\r\n    }\r\n\r\n    const usernameIcon = props.currentUser.username.substr(0, 1).toUpperCase()\r\n\r\n    const iconToShow = showUtilities ?\r\n        <Link to={`/user/${encodeURIComponent(props.currentUser.username)}`} className=\"user-icon-container UICH neutralize-link\">\r\n            <h1 className=\"user-username-icon user-icon-hover\">{usernameIcon}</h1>\r\n        </Link>\r\n        :\r\n        <Link to={`/user/${encodeURIComponent(props.currentUser.username)}`} className=\"user-icon-container UICH\">\r\n            <img src={userIcon} className=\"user-icon user-icon-hover\" alt=\"user\" />\r\n        </Link>\r\n\r\n    const basicStyles = {user: {className: '', icon: userIconSB}, notifications: {className: '', icon: bellIconB}, following: {className: '', icon: heartIconB}}\r\n    if (utilityShown === 'user') { basicStyles.user = {className: 'UUO-selected', icon: userIconW}}\r\n    if (utilityShown === 'notifications') { basicStyles.notifications = {className: 'UUO-selected', icon: bellIconW}}\r\n    if (utilityShown === 'following') { basicStyles.following = {className: 'UUO-selected', icon: heartIconW}}\r\n    \r\n    const pendingNotifStats = props.currentUser && props.currentUser.pendingNotifications > 0 ?\r\n        ['PN-bubble', props.currentUser.pendingNotifications] : [null, null]\r\n\r\n    const showInBanner = showUtilities ?\r\n        <React.Fragment>\r\n            <Link to=\"/post-form/\" className=\"UU-add-post user-utility-option neutralize-link\" style={{gridColumn: '1/3'}}>\r\n                <img src={plusIcon} className=\"UUAP-icon\" alt=\"add post\"/>\r\n                <h4 className=\"UUAP-text\">add post</h4>\r\n            </Link>\r\n            <div onClick={() => changeUtilityShown('user')} className={`user-utility-option ${basicStyles.user.className}`}>\r\n                <img src={basicStyles.user.icon} className=\"UU-icon\" alt=\"user\" />\r\n            </div>\r\n            <div onClick={() => changeUtilityShown('notifications')} className={`user-utility-option PN-container ${basicStyles.notifications.className}`}>\r\n                <img src={basicStyles.notifications.icon} className=\"UU-icon\" alt=\"notifications\" />\r\n                <div className={pendingNotifStats[0]}>{pendingNotifStats[1]}</div>\r\n            </div>\r\n            <div onClick={() => changeUtilityShown('following')} className={`user-utility-option ${basicStyles.following.className}`}>\r\n                <img src={basicStyles.following.icon} className=\"UU-icon\" alt=\"follow\" />\r\n            </div>\r\n            <div onClick={() => logout()} className=\"user-utility-option UU-logout\">\r\n                <img src={exitIcon} className=\"UU-logout-icon\" alt=\"log out\" />\r\n            </div>\r\n        </React.Fragment>\r\n        :\r\n        <div onClick={() => changeShowUtilities(!showUtilities)} className=\"user-username-container SUH\"><h2 className=\"user-username\">{props.currentUser.username}</h2></div>\r\n\r\n    const showBubble = showUtilities ?\r\n        <div />\r\n        :\r\n        <div onClick={() => changeUtilityShown('notifications')} className=\"user-notification-bubble\">4</div>\r\n\r\n\r\n    const showUtilityContent = utilityShown ? \r\n        {display: 'block'} : {display: 'none'}\r\n\r\n    const utilityContent = () => {\r\n        if (utilityShown === 'user') {\r\n            return <div><UserInfo /></div>\r\n        }\r\n        if (utilityShown === 'notifications') {\r\n            return <UserNotifList />\r\n        }\r\n        if (utilityShown === 'following') {\r\n            return <UserSP />\r\n        }\r\n        return null\r\n    }\r\n    \r\n    return (\r\n        <div className=\"user-container LGD-user-container\">\r\n            <div className=\"user-options-splitter\">\r\n                {iconToShow}\r\n            </div>\r\n            <div className=\"user-banner\">\r\n                {showInBanner}\r\n            </div>\r\n            {showBubble}\r\n            <div className=\"UU-utilities-splitter\" style={showUtilityContent}/>\r\n            <div className=\"UU-content-container\" style={showUtilityContent}>\r\n                <h3>{utilityShown}</h3>\r\n                {utilityContent()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { clearToken, setCurrentUser }\r\n)(Logged)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../static/css/newUser.css'\r\nimport NotLogged from './NotLogged'\r\nimport Logged from './Logged'\r\n\r\n\r\nconst UserContainer = (props) => {\r\n    const logStateToShow = props.token ? <Logged /> : <NotLogged />\r\n    \r\n    return (\r\n        <div className=\"user-wrapper\">\r\n            {logStateToShow}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        token: state.token\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps\r\n)(UserContainer)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { SKILL_SEARCH } from '../schemas'\r\nimport Loading from './Loading'\r\n\r\nconst SkillSugg = (props) => {\r\n    const splitQuery = props.query.split(' ')\r\n    const lastWord = splitQuery.slice(-1) === '' ? splitQuery.slice(-2, -1)[0] : splitQuery.slice(-1)[0]\r\n    const [skills, setSkills] = useState([])\r\n    const skillSearchQuery = useQuery(SKILL_SEARCH, {\r\n        variables: {filter: lastWord}\r\n    })\r\n    const skillConditions = (query, reducer) => {\r\n        if (!query) return null\r\n        if (!query.skillSearch) return null\r\n        return query.skillSearch\r\n    }\r\n\r\n    const skillsList = skillConditions(skillSearchQuery.data, skills)\r\n    useEffect(() => {\r\n        if (skillsList) {\r\n            setSkills(skillsList)\r\n        }\r\n    }, [skillsList, skills])\r\n\r\n    const suggestionsToShow = () => {\r\n        if (skills) {\r\n            return (\r\n                skills.map(s => \r\n                    <div onClick={() => props.onSuggestionClicked(s.name)} className=\"search-suggestion\" key={`SS${s.name}`}>{s.name}</div>\r\n                )\r\n            )\r\n        }\r\n        return (\r\n            <div style={{gridColumn: '1/3'}}>\r\n                <div style={{height: '5vh'}}/>\r\n                <Loading />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const suggestionsStyle = skills.length !== 0 && props.query !== '' && lastWord !== '' ? {display: 'block'} : {display: 'none'}\r\n\r\n    return (\r\n        <div className=\"search-suggestions-container\">\r\n            <div className=\"search-suggestions\" style={suggestionsStyle}>\r\n                {suggestionsToShow()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(SkillSugg)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserContainer from './newUser/UserContainer'\r\nimport plusIcon from '../static/svg/plusB.svg'\r\nimport userIcon from '../static/svg/userSB.svg'\r\nimport bellIconB from '../static/svg/bellB.svg'\r\nimport heartIconB from '../static/svg/heartB.svg'\r\nimport moreIconB from '../static/svg/moreSB.svg'\r\nimport bellIconW from '../static/svg/bellW.svg'\r\nimport heartIconW from '../static/svg/heartW.svg'\r\nimport moreIconW from '../static/svg/moreW.svg'\r\nimport logoIcon from '../static/svg/logoB.svg'\r\nimport hamburgerIcon from '../static/svg/hamburger.svg'\r\nimport searchIconW from '../static/svg/searchW.svg'\r\nimport searchIconB from '../static/svg/searchSB.svg'\r\nimport exitIcon from '../static/svg/exitB.svg'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport SkillSugg from './SkillSugg'\r\nimport UserNotifList from './user/logged/UserNotifList'\r\nimport UserSP from './user/logged/UserSP'\r\nimport SignIn from './newUser/form/SignIn'\r\nimport Register from './newUser/form/Register'\r\nimport { clearToken } from '../reducers/token'\r\n\r\nlet NavBar = (props) => {\r\n    const [utilityShown, setUtilityShown] = useState(null)\r\n    const [menuItemShown, setMenuItemShown] = useState(null)\r\n\r\n    const changeUtility = (name) => {\r\n        setMenuItemShown(null)\r\n        if (name === utilityShown) setUtilityShown(null)\r\n        else setUtilityShown(name)\r\n    }\r\n\r\n    const changeMenuItem = (item) => {\r\n        if (item === menuItemShown) setMenuItemShown(null)\r\n        else setMenuItemShown(item)\r\n    }\r\n\r\n    const linkToPush = `/browse/${encodeURIComponent(props.query)}`\r\n    \r\n    const enterQuery = () => {\r\n        props.history.push(linkToPush)\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter'){\r\n            enterQuery()\r\n        }\r\n    }\r\n\r\n    const onSuggestionClicked = (skill) => {\r\n        const splitQuery = props.query.split(' ')\r\n        const newQuery = splitQuery.length === 1 ? `${skill} ` : `${splitQuery.slice(0, -1).join(' ')} ${skill} `\r\n        props.onQueryChange({target: {value: newQuery}})\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        localStorage.clear()\r\n        props.clearToken()\r\n    }\r\n\r\n    const menuStyle = menuItemShown ? {borderBottomColor: '#282828'} : null\r\n    \r\n    const pendingNotifStats = props.currentUser && props.currentUser.pendingNotifications > 0 ?\r\n        ['PN-bubble', props.currentUser.pendingNotifications] : [null, null]\r\n    \r\n    const ShowInSubNav = () => {\r\n        const moreItemButton = menuItemShown === 'more' ?\r\n            <img src={moreIconW} onClick={() => changeMenuItem('more')} className=\"menu-item-selected\" alt=\"more\" />\r\n            :\r\n            <img src={moreIconB} onClick={() => changeMenuItem('more')} className=\"menu-item\" alt=\"more\" />\r\n        if (utilityShown === 'menu') {\r\n            if (props.token) {\r\n                // const allItems = [\r\n                //     {name: 'notifications', iconB: bellIconB, iconW: bellIconW},\r\n                //     {name: 'following', iconB: heartIconB, iconW: heartIconW},\r\n                // ]\r\n                const notifItemButton = menuItemShown === 'notifications' ?\r\n                    <div onClick={() => changeMenuItem('notifications')} className=\"menu-item-selected PN-container\">\r\n                        <img src={bellIconW}  className=\"notification-item\" alt={'notifications'} key={`UO${'notifications'}`} />\r\n                        <div className={pendingNotifStats[0]} >{pendingNotifStats[1]}</div>\r\n                    </div>\r\n                    :\r\n                    <div onClick={() => changeMenuItem('notifications')} className=\"menu-item PN-container\">\r\n                        <img src={bellIconB} className=\"notification-item\" alt={'notifications'} key={`UO${'notifications'}`} />\r\n                        <div className={pendingNotifStats[0]} >{pendingNotifStats[1]}</div>\r\n                    </div>\r\n            \r\n                const followingItemButton = menuItemShown === 'following' ? \r\n                    <img src={heartIconW} onClick={() => changeMenuItem('following')} className=\"menu-item-selected\" alt={'following'} key={`UO${'following'}`} />\r\n                    :\r\n                    <img src={heartIconB} onClick={() => changeMenuItem('following')} className=\"menu-item\" alt={'following'} key={`UO${'following'}`} />\r\n                \r\n    \r\n                return (\r\n                    <div className=\"nav-bar-sub-container-m\" style={menuStyle}>\r\n                        <Link to=\"/post-form/\" onClick={() => changeMenuItem(null)} className=\"menu-item\" style={{padding: 0, margin: 0}}><img src={plusIcon} className=\"menu-item\" alt=\"add project\" /></Link>\r\n                        <Link to={`/user/${props.currentUser.username}`} onClick={() => changeMenuItem(null)} className=\"menu-item\" style={{padding: 0, margin: 0}}><img src={userIcon} className=\"menu-item\" alt=\"user page\" /></Link>\r\n                        {notifItemButton}\r\n                        {followingItemButton}\r\n                        <img src={exitIcon} onClick={() => handleLogout()} className=\"menu-item-logout\" alt=\"log out\" />\r\n                        {moreItemButton}\r\n                    </div>\r\n                )\r\n            }\r\n            const allItems = ['sign in', 'register']\r\n            const modalItemButtons = allItems.map(i => menuItemShown === i ? \r\n                <h3 onClick={() => changeMenuItem(i)} className=\"menu-item-selected\" key={`MI${i}`} >{i}</h3>\r\n                :\r\n                <h3 onClick={() => changeMenuItem(i)} className=\"menu-item\" key={`MI${i}`} >{i}</h3>\r\n            )\r\n            return (\r\n                <div className=\"nav-bar-sub-container-m\" style={menuStyle}>\r\n                    {modalItemButtons}\r\n                    {moreItemButton}\r\n                </div>\r\n            )\r\n\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    const MenuItemToShow = () => {\r\n        if (menuItemShown === 'sign in') {\r\n            return (\r\n                <div className=\"menu-modal-container\">\r\n                    <SignIn noBG={true} changeMenuItem={changeMenuItem} />\r\n                </div>\r\n            )\r\n        }\r\n        if (menuItemShown === 'register') {\r\n            return (\r\n                <div className=\"menu-modal-container\">\r\n                    <Register noBG={true} changeMenuItem={changeMenuItem} />\r\n                </div>\r\n            )\r\n        }\r\n        if (menuItemShown === 'notifications') {\r\n            return (\r\n                <div className=\"menu-modal-container\">\r\n                    <h2>notifications</h2>\r\n                    <UserNotifList />\r\n                </div>\r\n            )\r\n        }\r\n        if (menuItemShown === 'following') {\r\n            return (\r\n                <div className=\"menu-modal-container\">\r\n                    <h2>saved posts</h2>\r\n                    <UserSP />\r\n                </div>\r\n            )\r\n        }\r\n        if (menuItemShown === 'more') {\r\n            return (\r\n                <div className=\"menu-modal-container\">\r\n                    <Link to=\"/contact/\" className=\"neutralize-link\"><h1 className=\"more-link\">contact us</h1></Link>\r\n                </div>\r\n            )\r\n        }\r\n        return null\r\n    }\r\n    const showWhenSB = utilityShown === 'search' ? {display: 'block'} : {display: 'none'}\r\n    const alertBarStyle = props.alertNotif.color ?\r\n        {backgroundColor: props.alertNotif.color, color: props.alertNotif.textColor}\r\n        :\r\n        {display: 'none', backgroundColor: props.alertNotif.color, color: props.alertNotif.textColor}\r\n    \r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"nav-container HWM\">\r\n                <div className=\"nav-bar-container\">\r\n                    <Link to=\"/\" className=\"icon-container\" >\r\n                        <img src={logoIcon} alt=\"icon\" className=\"nav-bar-icon\" />\r\n                    </Link>\r\n                    <div className=\"search-bar\">\r\n                        <Link to={linkToPush} className=\"neutralize-link enter-search search-hover\" onClick={() => enterQuery()}>\r\n                            <img src={searchIconW} className=\"search-icon\" alt=\"search\" />\r\n                        </Link>\r\n                        <div className=\"search-hr\" style={{backgroundColor: 'white'}} />\r\n                        <input value={props.query} className=\"search-input\" type=\"text\" onChange={(e) => props.onQueryChange(e)} onKeyPress={(e) => handleKeyPress(e)} placeholder=\"search or enter nothing for all results\" />\r\n                        <div className=\"SB-separator\" />\r\n                        <SkillSugg query={props.query} onSuggestionClicked={onSuggestionClicked} />\r\n                    </div>\r\n                    <UserContainer />\r\n                </div>\r\n                <div className=\"alert-bar-container\" style={{backgroundColor: props.alertNotif.color, color: props.alertNotif.textColor}}>\r\n                    {props.alertNotif.message}\r\n                </div>\r\n            </div>\r\n            <div className=\"nav-container-m SWM\">\r\n                <div className=\"nav-bar-container-m\">\r\n                    <Link to=\"/\" className=\"NB-brand neutralize-link\">\r\n                        <img src={logoIcon} className=\"NB-logo\" alt=\"logo\" />\r\n                        <h2>ProjectU</h2>\r\n                    </Link>\r\n                    <div className=\"NB-primary-utilities\">\r\n                        <img src={searchIconB} onClick={() => changeUtility('search')} className=\"PU-search\" alt=\"search\" />\r\n                        <div onClick={() => changeUtility('menu')} className=\"PU-hamburger-container PN-container\">\r\n                            <img src={hamburgerIcon} className=\"PU-hamburger\" alt=\"menu\" />\r\n                            <div className={`${pendingNotifStats[0]} PN-bubble-hamburger`}>{pendingNotifStats[1]}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"alert-bar-container\" style={alertBarStyle}>\r\n                    {props.alertNotif.message}\r\n                </div>\r\n                <div className=\"nav-bar-sub-container\" style={showWhenSB}>\r\n                    <div className=\"search-bar\">\r\n                        <Link to={linkToPush} className=\"neutralize-link enter-search search-hover\" onClick={() => enterQuery()}>\r\n                            <img src={searchIconW} className=\"search-icon\" alt=\"search\" />\r\n                        </Link>\r\n                        <div className=\"search-hr\" style={{backgroundColor: 'white'}} />\r\n                        <input value={props.query} className=\"search-input\" type=\"text\" onChange={(e) => props.onQueryChange(e)} onKeyPress={(e) => handleKeyPress(e)} placeholder=\"search or enter nothing for all results\" />\r\n                        <div className=\"SB-separator\" />\r\n                        <SkillSugg query={props.query} onSuggestionClicked={onSuggestionClicked} />\r\n                    </div>\r\n                </div>\r\n                <ShowInSubNav />\r\n                <MenuItemToShow />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavBar = withRouter(NavBar)\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\r\n        currentUser: state.currentUser,\r\n        token: state.token,\r\n        alertNotif: state.alertNotif\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { clearToken }\r\n)(NavBar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../static/css/subNav.css'\r\n\r\nconst SubNav = (props) => {\r\n    const scrollToRef = () => window.scrollTo(0)\r\n    return (\r\n        <div onClick={() => scrollToRef()} className=\"sub-nav-container\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(SubNav)","export const setSearch = (search) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_SEARCH',\r\n            data: search\r\n        })\r\n    }\r\n}\r\n\r\nconst search = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'SET_SEARCH':\r\n          return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default search","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../../static/css/home.css'\r\nimport { setSearch } from '../../reducers/search'\r\n\r\nlet Home = (props) => {\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"navbar-height\" />\r\n            <h1 className=\"home-header\">Im looking for:</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nHome = withRouter(Home)\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null,\r\n    { setSearch }\r\n)(Home)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { SAVE_POST } from '../../schemas'\r\nimport { setCurrentUserSP } from '../../reducers/currentUser'\r\n// import '../../static/css/post.css'\r\nimport '../../static/css/newPost.css'\r\nimport userIcon from '../../static/svg/userB.svg'\r\nimport { palletteGenerator } from '../../hooks/index'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nconst Post = (props) => {\r\n    const post = props.post\r\n    const color = post.color\r\n    const colorPalette = palletteGenerator(color).colorPallette\r\n\r\n    const handleError = (e) => {\r\n        console.log(e)\r\n    }\r\n    const [savePostMutation] = useMutation(SAVE_POST, {\r\n        onError: handleError\r\n    })\r\n    const handleSavePost = async () => {\r\n        const result = await savePostMutation({\r\n            variables: {\r\n                user: props.currentUser._id,\r\n                postId: post._id\r\n            }\r\n        })\r\n        if (result) {\r\n            props.setCurrentUserSP(props.currentUser.savedPosts.concat(post))\r\n            console.log('post saved')\r\n        }\r\n    }\r\n    const mappedSkills = () => {\r\n        let allSkills = []\r\n        for (const ind in post.skillNames) {\r\n            allSkills.push(\r\n                <Link to={`/browse/${encodeURIComponent(post.skillNames[ind])}`} className=\"post-skill-ins-container neutralize-link\" key={`SI${post.skillNames[ind]}`}>\r\n                    <h4 className=\"PSI-name\">{post.skillNames[ind]}</h4>\r\n                    <div className=\"PSI-stats\">\r\n                        {`${post.skillFills[ind]} / ${post.skillCapacities[ind]}`}\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n        return allSkills\r\n    }\r\n    let cleanedTime = new Date(Number(post.time))\r\n    cleanedTime = cleanedTime.toString().split(' ')\r\n    // cleanedTime = cleanedTime.slice(1,4).join(' ') + ' ' + cleanedTime[4].split(':').slice(0,2).join(':')\r\n    cleanedTime = cleanedTime.slice(1,3).join(' ') + ', ' + cleanedTime[3]\r\n    if (props.stretch) {\r\n        return (\r\n            <div className=\"post-wrapper\">\r\n                <div className=\"post-color-indicator\" style={{backgroundColor: colorPalette.color}} />\r\n                <div className=\"post-container\">\r\n                    <div className=\"post-header-wrapper\">\r\n                        <div className=\"post-utilities-container\">\r\n                            <div onClick={() => handleSavePost()} className=\"PU-icon-container\">\r\n                                <svg className=\"PU-icon\" fill={colorPalette.color}  viewBox=\"0 -28 512.00002 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"/></svg>\r\n                            </div>\r\n                            <CopyToClipboard text={`http://localhost:3000/post/${encodeURIComponent(post.title)}`} className=\"PU-icon-container\">\r\n                                <svg className=\"PU-icon\" style={{width: '20px', paddingRight: '5px', paddingLeft: '5px'}} fill={colorPalette.color} viewBox=\"0 -22 512 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 233.820312-212.777344-233.320312v139.203125h-45.238281c-140.273437 0-253.984375 113.710937-253.984375 253.984375v73.769531l20.09375-22.019531c68.316406-74.851562 164.980469-117.5 266.324219-117.5h12.804687v139.203125zm0 0\"/></svg>\r\n                            </CopyToClipboard>\r\n                            <Link to={`/post/${encodeURIComponent(post.title)}`} className=\"PU-icon-container\">\r\n                                <svg className=\"PU-icon\" fill={colorPalette.color} viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m386.158 8.733c-5.858-5.858-15.355-5.858-21.213 0l-36.478 36.478c-19.923-10.769-45.386-7.748-62.199 9.065l-69.416 69.416c-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l25.09-25.09c38.912 32.448 92.273 42.6 140.591 26.252l66.82 66.82c8.376-18.192 5.834-40.216-7.65-56.069l35.058-35.058c5.858-5.858 5.858-15.355 0-21.213-.101-.101-.211-.187-.315-.284l.015-.015z\"/><path d=\"m276.459 400.011c-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.846 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0l-46.272 46.272c-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l46.272-46.272c14.044-14.043 14.044-36.807.003-50.848z\"/><path d=\"m276.16 188.504-7.248 7.248c-25.715 25.715-67.558 25.715-93.273 0s-25.715-67.558 0-93.273l57.514-57.514c-16.157-6.188-34.547-4.891-49.768 3.892l-36.329-36.329c-5.858-5.858-15.355-5.858-21.213 0l-121.45 121.449c-5.858 5.858-5.858 15.355 0 21.213l36.329 36.329c-8.783 15.221-10.08 33.611-3.892 49.768l15.029-15.029c25.715-25.715 67.558-25.715 93.273 0 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854s15.314 20.895 17.854 32.993c12.098 2.54 23.618 8.48 32.992 17.853 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854 25.715 25.715 25.715 67.558 0 93.273l-18.562 18.562 6.497 6.497c14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847l-84.475-84.475c-43.996 9.707-89.992 2.097-128.358-20.761z\"/></g></svg>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"post-header-stretch\">\r\n                            <Link to={`/user/${encodeURIComponent(post.user.username)}`} className=\"PH-user-stretch neutralize-link post-hover\">\r\n                                <img className=\"PHU-icon\" src={userIcon} alt=\"user\" />\r\n                                <div>{post.user.username}</div>\r\n                            </Link>\r\n                            <div className=\"PH-date\">{cleanedTime}</div>               \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <Link to={`/post/${encodeURIComponent(post.title)}`} className=\"neutralize-link\"><h3 className=\"post-title post-hover\">{post.title}</h3></Link>\r\n                    <Link to={`/post/${encodeURIComponent(post.title)}`} className=\"post-description neutralize-link post-hover\">\r\n                        {post.description}\r\n                    </Link>\r\n                    <div className=\"post-skills-container\">\r\n                        {mappedSkills()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"post-wrapper\">\r\n            <div className=\"post-color-indicator\" style={{backgroundColor: colorPalette.color}} />\r\n            <div className=\"post-container\">\r\n                <div className=\"post-header\">\r\n                    <Link to={`/user/${encodeURIComponent(post.user.username)}`} className=\"PH-user neutralize-link post-hover\">\r\n                        <img className=\"PHU-icon\" src={userIcon} alt=\"user\" />\r\n                        <div>{post.user.username}</div>\r\n                    </Link>\r\n                    <div className=\"PH-date\">{cleanedTime}</div>               \r\n                </div>\r\n                <Link to={`/post/${encodeURIComponent(post.title)}`} className=\"neutralize-link\"><h3 className=\"post-title post-hover\">{post.title}</h3></Link>\r\n                <Link to={`/post/${encodeURIComponent(post.title)}`} className=\"post-description neutralize-link post-hover\">\r\n                    {post.description}\r\n                </Link>\r\n                <div className=\"post-skills-container\">\r\n                    {mappedSkills()}\r\n                </div>\r\n                <div className=\"post-utilities-container\">\r\n                    <div onClick={() => handleSavePost()} className=\"PU-icon-container\">\r\n                        <svg className=\"PU-icon\" fill={colorPalette.color}  viewBox=\"0 -28 512.00002 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"/></svg>\r\n                    </div>\r\n                    <CopyToClipboard text={`http://localhost:3000/post/${encodeURIComponent(post.title)}`} className=\"PU-icon-container\">\r\n                        <svg className=\"PU-icon\" style={{width: '20px', paddingRight: '5px', paddingLeft: '5px'}} fill={colorPalette.color} viewBox=\"0 -22 512 511\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 233.820312-212.777344-233.320312v139.203125h-45.238281c-140.273437 0-253.984375 113.710937-253.984375 253.984375v73.769531l20.09375-22.019531c68.316406-74.851562 164.980469-117.5 266.324219-117.5h12.804687v139.203125zm0 0\"/></svg>\r\n                    </CopyToClipboard>\r\n                    <Link to={`/post/${encodeURIComponent(post.title)}`} className=\"PU-icon-container\">\r\n                        <svg className=\"PU-icon\" fill={colorPalette.color} viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m386.158 8.733c-5.858-5.858-15.355-5.858-21.213 0l-36.478 36.478c-19.923-10.769-45.386-7.748-62.199 9.065l-69.416 69.416c-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l25.09-25.09c38.912 32.448 92.273 42.6 140.591 26.252l66.82 66.82c8.376-18.192 5.834-40.216-7.65-56.069l35.058-35.058c5.858-5.858 5.858-15.355 0-21.213-.101-.101-.211-.187-.315-.284l.015-.015z\"/><path d=\"m276.459 400.011c-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.846 0 14.041-14.041 14.041-36.806 0-50.846-14.041-14.041-36.806-14.041-50.847 0l-46.272 46.272c-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.847 14.041 14.041 36.806 14.041 50.846 0-14.041 14.041-14.041 36.806 0 50.846 14.041 14.041 36.806 14.041 50.846 0l46.272-46.272c14.044-14.043 14.044-36.807.003-50.848z\"/><path d=\"m276.16 188.504-7.248 7.248c-25.715 25.715-67.558 25.715-93.273 0s-25.715-67.558 0-93.273l57.514-57.514c-16.157-6.188-34.547-4.891-49.768 3.892l-36.329-36.329c-5.858-5.858-15.355-5.858-21.213 0l-121.45 121.449c-5.858 5.858-5.858 15.355 0 21.213l36.329 36.329c-8.783 15.221-10.08 33.611-3.892 49.768l15.029-15.029c25.715-25.715 67.558-25.715 93.273 0 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854s15.314 20.895 17.854 32.993c12.098 2.54 23.618 8.48 32.992 17.853 9.374 9.374 15.315 20.895 17.854 32.992 12.098 2.54 23.618 8.48 32.992 17.854 25.715 25.715 25.715 67.558 0 93.273l-18.562 18.562 6.497 6.497c14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847 14.041 14.041 36.806 14.041 50.847 0 14.041-14.041 14.041-36.806 0-50.847l-84.475-84.475c-43.996 9.707-89.992 2.097-128.358-20.761z\"/></g></svg>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setCurrentUserSP }\r\n)(Post)","export const initializePosts = (posts) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'INIT_POSTS',\r\n            data: posts\r\n        })\r\n    }\r\n}\r\n\r\nexport const addPosts = (posts) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'ADD_POSTS',\r\n            data: posts\r\n        })\r\n    }\r\n}\r\n\r\nconst posts = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'INIT_POSTS':\r\n            return action.data\r\n        case 'ADD_POSTS':\r\n            if (state === null) {\r\n                return action.data\r\n            }\r\n            return state.concat(action.data)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default posts","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../static/css/formContainer.css'\r\n\r\nconst FormContainer = (props) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n    const handleExpand = () => {\r\n        setExpanded(!expanded)\r\n    }\r\n    const setBC = {backgroundColor: props.pallette.color}\r\n    if (expanded) {\r\n        return (\r\n            <div className=\"form-container\" style={{border: `3px solid ${props.pallette.color}`}}>\r\n                <div onClick={() => handleExpand()} className=\"form-contract standard-hover\" style={setBC} title=\"contract\">\r\n                    <img className=\"form-shrink-icon\" src={props.pallette.shrinkIcon} alt=\"team up\" />\r\n                </div>\r\n                {props.children}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div onClick={() => handleExpand()} className=\"form-container-expand standard-hover\" style={setBC} title={props.setTitle}>\r\n            <img className=\"form-expand-icon\" src={props.icon} alt=\"team up\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(FormContainer)","export const setSkillProposition = (arr) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_SKILL_PROPOSITION',\r\n            data: arr\r\n        })\r\n    }\r\n}\r\n\r\nconst skillProposition = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_SKILL_PROPOSITION' :\r\n            return action.data\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default skillProposition","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport handshakeIcon from '../../static/svg/handshakeB.svg'\r\nimport { setSkillProposition } from '../../reducers/skillProposition'\r\nimport { palletteGenerator } from '../../hooks'\r\n\r\nconst PostSkills = (props) => {\r\n    let ppCount = props.skillProposition.reduce((t, ins) => t + ins, 0)\r\n    const ppText = ['none', 'little', 'some', 'a lot', 'full']\r\n    const skills = props.skillNames\r\n    const pallette = palletteGenerator(props.color).colorPallette\r\n    const [a, aa] = useState(0)\r\n\r\n    const resetProposedHelp = () => {\r\n        props.setSkillProposition(Array(skills.length).fill(0))\r\n    }\r\n\r\n    const propPointStyles = [\r\n        {borderColor: props.color, backgroundColor: props.color},\r\n        {borderColor: props.color, backgroundColor: 'white'},\r\n        {borderColor: props.color, backgroundColor: pallette.higherColor},\r\n        // {borderColor: props.color, backgroundColor: props.color, backgroundImage: `url(${stripedBar})`},\r\n    ]\r\n    const propoitionPoints = (capacity, fill, tempFill = null) => {\r\n        let allPropositionPoints = []\r\n        for (let i = 0; i < fill; i++) {\r\n            allPropositionPoints.push(\r\n                {style: propPointStyles[0], id: `f${i}`}\r\n            )\r\n        }\r\n        for (let i = 0; i < tempFill; i++) {\r\n            allPropositionPoints.push(\r\n                {style: propPointStyles[2], id: `t${i}`}\r\n            )\r\n        }\r\n        for (let i = 0; i < capacity - fill - tempFill; i++) {\r\n            allPropositionPoints.push(\r\n                {style: propPointStyles[1], id: `e${i}`}\r\n            )\r\n        }\r\n        return allPropositionPoints\r\n    }\r\n    const propPoints = propoitionPoints(4, ppCount, 0).map(i => <div className=\"proposition-point\" style={i.style} key={i.id} />)\r\n\r\n    const skillsAvilable = () => {\r\n        const skillsData = []\r\n        for (const si in skills) {\r\n            let dots = []\r\n            const dotsAmt = props.skillProposition[si]\r\n            for (let di = 0; di < dotsAmt; di++) {\r\n                dots.push(\r\n                    <div className=\"proposition-point push-right\" style={propPointStyles[0]} key={`dot${di}`} />\r\n                )\r\n            }\r\n            if (dots.length > 0) {dots.push(<h4 className=\"skill-info\" style={{color: props.color, opacity: 1}} key=\"PSInfo\">{props.skillFills[si] + dots.length}/{props.skillCapacities[si]}</h4>)}\r\n            skillsData.push(\r\n                {dotsAmt, ins: si, skillName: skills[si], skillCap: props.skillCapacities[si], skillFill: props.skillFills[si]}\r\n            )\r\n        }\r\n        return skillsData\r\n    }\r\n\r\n    const proposeHelp = (i) => {\r\n        if (ppCount < 4) {\r\n            if ((props.skillCapacities[i] - props.skillFills[i] - props.skillProposition[i]) > 0) {\r\n                let modifiedSkillProposition = props.skillProposition\r\n                modifiedSkillProposition[i] = modifiedSkillProposition[i] + 1\r\n                aa(a + 1)\r\n                props.setSkillProposition(modifiedSkillProposition)\r\n            }\r\n        }\r\n    }\r\n\r\n    const skillList = skillsAvilable().map(sd => {\r\n        if (!props.form) {\r\n            return (\r\n                <div className=\"skill-container-NH\" key={`SD${sd.skillName}`}>\r\n                    <h3 className=\"skill-name\">{sd.skillName}</h3>\r\n                    <div className=\"skill-bar\">\r\n                        {propoitionPoints(sd.skillCap, sd.skillFill, 0).map(i => <div className=\"proposition-point\" style={i.style} key={i.id} />)}\r\n                        <h4 className=\"skill-info\">{sd.skillFill}/{sd.skillCap}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"skill-container\" onClick={() => proposeHelp(sd.ins)} key={`SD${sd.skillName}`}>\r\n                <h3 className=\"skill-name\">{sd.skillName}</h3>\r\n                <div className=\"skill-bar\">\r\n                    {propoitionPoints(sd.skillCap, sd.skillFill, sd.dotsAmt).map(i => <div className=\"proposition-point\" style={i.style} key={i.id} />)}\r\n                    <h4 className=\"skill-info\">{sd.skillFill}/{sd.skillCap}</h4>\r\n                    {sd.dotsAmt > 0 ?\r\n                        <h4 className=\"skill-proposition-info\" style={{color: props.color}}> + {sd.dotsAmt}</h4> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    if (!props.form){\r\n        return (\r\n            <div className=\"pp-skills-container\" >\r\n                <h2 className=\"skills-title\">skills</h2>\r\n                <img src={handshakeIcon} className='skills-handshake-icon' alt=\"contribute\" />\r\n                <div style={{height: '10px', gridColumn: '1/3'}} />\r\n                <h1 style={{gridColumn: '1/3', display: 'none'}} >{a}</h1>\r\n                {skillList}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"pp-skills-container\">\r\n            <h1 style={{gridColumn: '1/3', display: 'none'}} >{a}</h1>\r\n            <div className=\"skill-proposition-text-container\">\r\n                <h3 className=\"skill-proposition-text\"><i>personal investment of time</i></h3>\r\n            </div>\r\n            <div className=\"skill-proposition-points\">\r\n    <h3 className=\"skill-proposition-dm-text\" style={{width: '47px'}}><i>{ppText[ppCount]}</i></h3>\r\n                {propPoints}\r\n                <img src={pallette.reloadIcon} title=\"reset help\" onClick={() => resetProposedHelp()} className=\"proposition-points-reset post-hover\" style={{backgroundColor: pallette.color, color: pallette.textColor}} alt=\"reset points\" />\r\n            </div>\r\n            <div style={{height: '10px', gridColumn: '1/3'}} />\r\n            {skillList}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        skillProposition: state.skillProposition\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setSkillProposition }\r\n)(PostSkills)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { CREATE_POST } from '../../schemas'\r\nimport { useField } from '../../hooks/index'\r\nimport '../../static/css/postForm.css'\r\nimport { palletteGenerator } from '../../hooks/index'\r\nimport PostSkills from '../postPage/PostSkills'\r\nimport { setSkillProposition } from '../../reducers/skillProposition'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nlet PostForm0 = (props) => {\r\n    const title = useField('text')\r\n    const description = useField('text')\r\n    const [color, setColor] = useState(null)\r\n\r\n    const [skillName, setSkillName] = useState('')\r\n    const [skillNameList, setSkillNameList] = useState([])\r\n    const [skillCapacity, setSkillCapacity] = useState('')\r\n    const [skillCapList, setSkillCapList] = useState([])\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageLinkList, setImageLinkList] = useState([])\r\n    const [referenceLink, setReferenceLink] = useState('')\r\n    const [referenceLinkList, setReferenceLinkList] = useState([])\r\n\r\n    const handleError = (e) => {\r\n        console.log(e)\r\n    }\r\n    const [createPost] = useMutation( CREATE_POST, {\r\n        onError: handleError\r\n    })\r\n    useEffect(() => {\r\n        if (!props.skillProposition) {\r\n            console.log('update')\r\n            props.setSkillProposition(Array(skillNameList.length).fill(0))\r\n        }\r\n    }, [props.setSkillProposition,skillNameList, props, props.skillProposition])\r\n    \r\n    const pallette = color ? palletteGenerator(color).colorPallette : {color: null, heigherColor: null}\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const postCreated = await createPost({\r\n            variables: {\r\n                title: title.fields.value,\r\n                user: props.currentUser._id,\r\n                skillNames: skillNameList,\r\n                skillCapacities: skillCapList,\r\n                skillFills: props.skillProposition,\r\n                description: description.fields.value,\r\n                color: color,\r\n                imageLinks: imageLinkList,\r\n                referenceLinks: referenceLinkList\r\n            }\r\n        })\r\n        if (postCreated) {\r\n            console.log('POST CREATED')\r\n            console.log(postCreated)\r\n            props.setSkillProposition(null)\r\n            title.reset()\r\n            description.reset()\r\n            setSkillName('')\r\n            setSkillNameList([])\r\n            setSkillCapacity('')\r\n            setSkillCapList([])\r\n            setImageLink('')\r\n            setImageLinkList([])\r\n            setReferenceLink('')\r\n            setReferenceLinkList([])\r\n            props.history.push(`/post/${encodeURIComponent(postCreated.data.addPost.title)}`)\r\n        }\r\n    }\r\n    // \r\n    const colors = ['rgb(44,52,59)', 'rgb(15,138,95)', 'rgb(133,156,177)', 'rgb(224,52,77)', 'rgb(245,165,0)', 'rgb(1,152,173)', 'rgb(16,79,37)', 'rgb(152,183,49)', 'rgb(113,112,255)']\r\n    const colorsHTML = colors.map(c => <div onClick={() => setColor(c)} className=\"color-ins\" style={{backgroundColor: c}} key={`PFC${c}`} />)\r\n    const addSkills = () => {\r\n        if (Number(skillCapacity)){\r\n            setSkillNameList(skillNameList.concat(skillName.toLowerCase()))\r\n            setSkillName('')\r\n            setSkillCapList(skillCapList.concat(Number(skillCapacity)))\r\n            setSkillCapacity('')\r\n            props.setSkillProposition(props.skillProposition.concat(0))\r\n        }\r\n    }\r\n    const removeSkill = (ind) => {\r\n        const newSkillNameList = []\r\n        for (const i in skillNameList) {\r\n            if (i !== ind) { newSkillNameList.push(skillNameList[i]) }\r\n        }\r\n        setSkillNameList(newSkillNameList)\r\n        const newSkillCapList = []\r\n        for (const i in skillCapList) {\r\n            if (i !== ind) { newSkillCapList.push(skillCapList[i]) }\r\n        }\r\n        setSkillCapList(newSkillCapList)\r\n        const newSkillProposition = []\r\n        for (const i in props.skillProposition) {\r\n            if (i !== ind) { newSkillProposition.push(props.skillProposition[i]) }\r\n        }\r\n        props.setSkillProposition(newSkillProposition)\r\n    }\r\n    \r\n    const removeImage = (ind) => {\r\n        const newImageLinkList = []\r\n        for (const i in imageLinkList) {\r\n            if (i !== ind) { newImageLinkList.push(imageLinkList[i]) }\r\n        }\r\n        setImageLinkList(newImageLinkList)\r\n    }\r\n    \r\n    const addImage = () => {\r\n        if (imageLink.includes('https://') || imageLink.includes('http://')) {\r\n            setImageLinkList(imageLinkList.concat(imageLink))\r\n            setImageLink('')\r\n        }\r\n    }\r\n\r\n    const removeRL = (ind) => {\r\n        const newReferenceLinkList = []\r\n        for (const i in referenceLinkList) {\r\n            if (i !== ind) { newReferenceLinkList.push(referenceLinkList[i]) }\r\n        }\r\n        setReferenceLinkList(newReferenceLinkList)\r\n    }\r\n\r\n    const addRL = () => {\r\n        if (referenceLink.includes('https://') || referenceLink.includes('http://')) {\r\n            setReferenceLinkList(referenceLinkList.concat(referenceLink))\r\n            setReferenceLink('')\r\n        }\r\n    }\r\n\r\n    const skillsHTML = () => {\r\n        let skillsHTML = []\r\n        for (const ind in skillNameList) {\r\n            skillsHTML.push(\r\n                <div className=\"PF-skill-wrapper\" key={`PFS${skillNameList[ind]}`}>\r\n                    <div className=\"PF-skill-container\">\r\n                        <div className=\"PF-skill-name\">{skillNameList[ind]}</div>\r\n                        <div className=\"PF-skill-cap\">{skillCapList[ind]}</div>\r\n                    </div>\r\n                    <div className=\"PF-skill-remove\" onClick={() => removeSkill(ind)}>x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return skillsHTML\r\n    }\r\n\r\n    const skillContribution = props.skillProposition && skillNameList.length > 0 ?\r\n        <PostSkills form={true} skillNames={skillNameList} skillCapacities={skillCapList} skillFills={Array(skillNameList.length).fill(0)} color=\"rgb(40,40,40)\" />\r\n        :\r\n        <h4 className=\"PF-input-title\" style={{opacity: 0.7}}>must add skill first</h4>\r\n\r\n    const imagesHTML = () => {\r\n        const allImages = []\r\n        for (const ind in imageLinkList) {\r\n            allImages.push(\r\n                <div className=\"PF-image-display-container\" key={`IL${ind}`}>\r\n                    <img className=\"PF-image-display\" src={imageLinkList[ind]} alt={`(${imageLinkList[ind]}) failed to load`} key={`IL${imageLinkList[ind]}`} />\r\n                    <div onClick={() => removeImage(ind)} className=\"PF-skill-remove\" style={{height: '75px', lineHeight: '70px'}} >x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return allImages.map(img => img)\r\n    }\r\n\r\n    const referenceLinksHTML = () => {\r\n        const allRL = []\r\n        for (const ind in referenceLinkList) {\r\n            allRL.push(\r\n                <div className=\"PF-link-container\" key={`RL${ind}`}>\r\n                    <a href={referenceLinkList[ind]} className=\"PF-reference-link neutralize-link\">{referenceLinkList[ind].split('/')[2]}</a>\r\n                    <div onClick={() => removeRL(ind)} className=\"PF-skill-remove\" style={{lineHeight: '30px'}}>x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return allRL.map(rl => rl)\r\n    }\r\n    return (\r\n        <div className=\"post-form0-container\">\r\n            <h2 className=\"pp-form-title\">create post</h2>\r\n            <div className=\"custom-hr\" style={{backgroundColor: '#282828'}} />\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"post-form0-form\">\r\n                    <label htmlFor=\"PF-title\"><h3 className=\"PF-input-title\">title</h3></label>\r\n                    <input className=\"PF-search-input\" id=\"PF-title\" {...title.fields} />\r\n                    <label htmlFor=\"PF-description\"><h3 className=\"PF-input-title\">description</h3></label>\r\n                    <textarea className=\"PF-search-input\" id=\"PF-description\" {...description.fields}  style={{height: '100px', width: '100%'}} />\r\n                    <h3 className=\"PF-input-title\">color</h3>\r\n                    <div className=\"PF-display-color\" style={{backgroundColor: pallette.color}} >\r\n                        <div className=\"PF-display-part\" style={{backgroundColor: pallette.color, color: pallette.textColor}}><h4 style={{margin: 'auto'}}>primary</h4></div>\r\n                        <div className=\"PF-display-part\" style={{backgroundColor: pallette.higherColor, color: pallette.textColor}}><h4 style={{margin: 'auto'}}>secondary</h4></div>\r\n                    </div>\r\n                    <div className=\"PF-input-colors\">\r\n                        {colorsHTML}\r\n                    </div>\r\n                    <label htmlFor=\"PF-skillName\"><h3 className=\"PF-input-title\">skills</h3></label>\r\n                    <div>\r\n                        <div className=\"PF-skill-fields\">\r\n                            <input className=\"PF-search-input\" placeholder=\"skill name\" id=\"PF-skillName\" value={skillName} onChange={(e) => setSkillName(e.target.value)} type=\"text\" style={{marginBottom: 0}} />\r\n                            <input className=\"PF-search-input\" placeholder=\"amount of help\" value={skillCapacity} onChange={(e) => setSkillCapacity(e.target.value)} type=\"number\" style={{marginBottom: 0}} />\r\n                        </div>\r\n                        <h4 onClick={() => addSkills()} className=\"PF-field-submit standard-hover\">add skill</h4>               \r\n                    </div>\r\n                    {skillsHTML().map(s => s)}\r\n                    <h3 className=\"PF-input-title\">contribution</h3>\r\n                    {skillContribution}\r\n                    <label htmlFor=\"PF-imageLinks\"><h3 className=\"PF-input-title\">images</h3></label>\r\n                    <input className=\"PF-search-input\" type=\"url\" placeholder=\"image link\" id=\"PF-imageLinks\" value={imageLink} onChange={(e) => setImageLink(e.target.value)} style={{marginBottom: 0}} />\r\n                    <h4 onClick={() => addImage()} className=\"PF-field-submit standard-hover\">add image</h4>\r\n                    <div className=\"PF-images-container\">\r\n                        {imagesHTML()}\r\n                    </div>\r\n                    <label htmlFor=\"PF-referenceLinks\"><h3 className=\"PF-input-title\">reference links</h3></label>\r\n                    <input className=\"PF-search-input\" type=\"url\" placeholder=\"link\" id=\"PF-referenceLinks\" value={referenceLink} onChange={(e) => setReferenceLink(e.target.value)} style={{marginBottom: 0}} />\r\n                    <h4 onClick={() => addRL()} className=\"PF-field-submit standard-hover\">add link</h4>\r\n                    {referenceLinksHTML()}\r\n                </div>\r\n                <button type=\"submit\" className=\"PF-submit standard-hover\"><h2 style={{margin: '5px'}}>create post</h2></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostForm0 = withRouter(PostForm0)\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        skillProposition: state.skillProposition,\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setSkillProposition }\r\n)(PostForm0)","export const toggleStretchLayout = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'TOGGLE_SL',\r\n        })\r\n    }\r\n}\r\n\r\nconst stretchLayout = (state = true, action) => {\r\n    switch (action.type) {\r\n        case 'TOGGLE_SL' :\r\n            return !state\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default stretchLayout","export const setEventSearch = (event) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_EVENT',\r\n            data: event\r\n        })\r\n    }\r\n}\r\n\r\nconst eventSearch = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_EVENT' :\r\n            return action.data\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default eventSearch","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../../static/css/results.css'\r\nimport Post from '../post/Post'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { SEARCH_POSTS } from '../../schemas'\r\nimport { addPosts } from '../../reducers/posts'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../Loading'\r\nimport FormContainer from '../FormContainer'\r\nimport { palletteGenerator } from '../../hooks'\r\nimport PostForm0 from '../post/PostForm0'\r\nimport { toggleStretchLayout } from '../../reducers/stretchLayout'\r\nimport { setEventSearch } from '../../reducers/eventSearch'\r\nimport covidIconB from '../../static/svg/virusB.svg'\r\nimport covidIconW from '../../static/svg/virusW.svg'\r\nimport covidIconC from '../../static/svg/virusC.svg'\r\nimport usaIconB from '../../static/svg/usaB.svg'\r\nimport usaIconW from '../../static/svg/usaW.svg'\r\nimport usaIconC from '../../static/svg/usaC.svg'\r\n\r\nconst Results = (props) => {\r\n    const currentIds = props.posts ? props.posts.map(p => p._id) : []\r\n    const [scrollAtBottom, setScrollAtBottom] = useState(false)\r\n    const decodedSearch = decodeURIComponent(props.query)\r\n    const {data} = useQuery(SEARCH_POSTS,\r\n        {variables: {\r\n            filterString: decodedSearch,\r\n            postIds: currentIds,\r\n            eventQuery: props.eventSearch,\r\n        }}\r\n    )\r\n    if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 400) && !scrollAtBottom) {\r\n        setScrollAtBottom(true)\r\n    }\r\n    if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 400) && scrollAtBottom) {\r\n        setScrollAtBottom(false)\r\n    }\r\n    const triggerWhenScroll = () => {\r\n        if ((window.innerHeight + window.scrollY) > (document.body.offsetHeight - 100) && !scrollAtBottom) {\r\n            setScrollAtBottom(true)\r\n        }\r\n        if ((window.innerHeight + window.scrollY) <= (document.body.offsetHeight - 100) && scrollAtBottom) {\r\n            setScrollAtBottom(false)\r\n        }\r\n    }\r\n    window.addEventListener('scroll', triggerWhenScroll, false)\r\n\r\n    const postChangeConditions = (query, reducer) => {\r\n        if (!scrollAtBottom) return false\r\n        if (!query) return false\r\n        if (!reducer) return true\r\n        if (query.length !== reducer.length) return true\r\n        const queryTitles = query.map(i => i.title)\r\n        const reducerTitles = reducer.map(i => i.title)\r\n        for (const title of queryTitles) {\r\n            if (!reducerTitles.includes(title)) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    const postsSearched = postChangeConditions(data.searchPosts, props.posts) ?\r\n        data.searchPosts : null\r\n\r\n    useEffect(() => {\r\n        if (postsSearched && !props.posts) {\r\n            props.addPosts(data.searchPosts)\r\n        }\r\n        if (postsSearched && props.posts) {\r\n            if (postsSearched.length > 0) {\r\n                if (!props.posts.map(p => p._id).includes(postsSearched[0]._id)){\r\n                    props.addPosts(data.searchPosts)\r\n                }\r\n            }\r\n        }\r\n    }, [data, props.addPosts, props, postsSearched])\r\n    if (!props.posts) {\r\n        return (\r\n            <div>\r\n                <div style={{height: '5vh'}}/>\r\n                <Loading />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const eventQuery = props.eventSearch\r\n    const eventKeys = () => {\r\n        if (eventQuery === 'COVID-19') {\r\n            return ['covid', 'coronavirus', 'outbreak', 'virus', 'emergency response']\r\n        }\r\n        if (eventQuery === '2020 Election') {\r\n            return ['election', 'democrat', 'republican', 'vote']\r\n        }\r\n        return null\r\n    }\r\n    const postToShow = (post, eventKeys) => {\r\n        if (eventKeys) {\r\n            for (const keyWord of eventKeys) {\r\n                if (post.description.toLowerCase().includes(keyWord) || post.title.toLowerCase().includes(keyWord)) {\r\n                    if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        if (post.title.toLowerCase().includes(decodedSearch.toLowerCase())) return true\r\n        for (const skill of post.skillNames) {\r\n            if (decodedSearch.includes(skill)) return true\r\n        }\r\n\r\n        return false\r\n    }\r\n    let postsToShow = props.posts\r\n    postsToShow = postsToShow.map(p => postToShow(p, eventKeys()) ? <Post stretch={props.stretchLayout} key={`post${p._id}`} post={p} /> : null)\r\n    const pallette = palletteGenerator('rgb(40,40,40)').colorPallette\r\n    const layoutBtnClass = props.stretchLayout ? 'layout-button-grid' : 'layout-button-stretch'\r\n    const layoutClass = !props.stretchLayout ? 'results-content-grid' : 'results-content-stretch'\r\n    \r\n    const eventsList = [\r\n        {name: 'COVID-19', color: 'rgb(237,32,40)', iconB: covidIconB, iconW: covidIconW, iconC: covidIconC},\r\n        {name: '2020 Election', color: 'rgb(255,0,255)', iconB: usaIconB, iconW: usaIconW, iconC: usaIconC}\r\n    ]\r\n    const eventsHTML = eventsList.map(e => e.name === props.eventSearch ? \r\n        <div className=\"event-selected\" onClick={() => props.setEventSearch(null)} style={{borderColor: e.color, backgroundColor: e.color}} key={`EV${e.name}`}>\r\n            <img src={e.iconW} className=\"event-image\" alt={e.name} />\r\n            <h3 className=\"event-text\">{e.name}</h3>\r\n        </div>\r\n        :\r\n        <div className=\"event\" onClick={() => props.setEventSearch(e.name)} style={{borderColor: e.color, color: e.color}} key={`EV${e.name}`}>\r\n            <img src={e.iconC} className=\"event-image\" alt={e.name} />\r\n            <h3 className=\"event-text\">{e.name}</h3>\r\n        </div>\r\n    )\r\n    // const resultsTitle = eventsList.map(e => e.name === props.eventSearch ?\r\n    //     <img src={e.iconB} className=\"title-image\" alt={e.name} /> : null\r\n    // )\r\n    const eventsContainerClass = props.eventSearch ? 'EC-active' : null\r\n    return (\r\n        <div className=\"home-wrapper\">\r\n            <div className=\"results-container\">\r\n                <Link to=\"/post-form/\">\r\n                    <FormContainer setTitle=\"create post\" icon={pallette.plusIcon} pallette={pallette}>\r\n                        <PostForm0 />\r\n                    </FormContainer>\r\n                </Link>\r\n                <div className=\"navbar-height\"/>\r\n                <h2 className=\"secondary-title\">events</h2>\r\n                <div className={`events-container ${eventsContainerClass}`}>\r\n                    {eventsHTML}\r\n                </div>\r\n                <div onClick={() => props.toggleStretchLayout(!props.stretchLayout)} className=\"layout-wrapper\">\r\n                    <div className=\"layout-container\">\r\n                        <div className={`layout-button ${layoutBtnClass}`} >\r\n                            <div className=\"layout-box\"/>\r\n                            <div className=\"layout-box\"/>\r\n                            <div className=\"layout-box\"/>\r\n                            <div className=\"layout-box\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div />\r\n                <div className={`results-content ${layoutClass}`}>\r\n                    {postsToShow}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        posts: state.posts,\r\n        search: state.search,\r\n        stretchLayout: state.stretchLayout,\r\n        eventSearch: state.eventSearch,\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addPosts, toggleStretchLayout, setEventSearch }\r\n)(Results)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PostImages = (props) => {\r\n    const [imgShown, setImgShown] = useState(null)\r\n    \r\n    const images = props.imageLinks\r\n    const imagesAmt = images.length\r\n    useEffect(() => {\r\n        if (imagesAmt > 0) setImgShown(images[0])\r\n    }, [images, imagesAmt])\r\n    const setToImgShown = (src) =>  {\r\n        setImgShown(src)\r\n    }\r\n    \r\n\r\n    const HIStyle = {\r\n            borderColor: props.color,\r\n            width: '100%'   \r\n        }\r\n    if (imagesAmt === 0) return null\r\n    else if (imagesAmt  === 1) {\r\n        return (\r\n            <div className=\"PPC-pictures-container\">\r\n                <img style={HIStyle} className=\"PPC-pictures-highlight\" src={imgShown} alt=\"highlight pic\" />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        const imageOptions = images.map(i => i === imgShown ?\r\n            <img key={`img${i}`} onClick={() => setToImgShown(i)} className=\"PPC-pictures-instance\" loading=\"lazy\" style={{borderColor: props.color}} src={i} alt=\"pic\" />\r\n            :\r\n            <img key={`img${i}`} onClick={() => setToImgShown(i)} className=\"PPC-pictures-instance\" loading=\"lazy\" style={{borderColor: '#282828'}} src={i} alt=\"pic\" />\r\n        )\r\n        \r\n        return (\r\n            <div className=\"PPC-pictures-container\">\r\n                <img style={HIStyle} className=\"PPC-pictures-highlight\" src={imgShown} alt=\"highlight pic\" />\r\n                <div className=\"PPC-all-pictures-container\">\r\n                    {imageOptions}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null\r\n)(PostImages)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { websiteStats } from '../../hooks/index'\r\n\r\nconst PostLinks = (props) => {\r\n    const links = props.referenceLinks\r\n    if (links.length === 0) {\r\n        return null\r\n    }\r\nconst linksToShow = links.map(l => {\r\n    const stats = websiteStats(l)\r\n    return (\r\n        <a href={l} className=\"PPC-reference-link neutralize-link\" style={{backgroundColor: stats.color}} key={`referenceLink${l}`}>\r\n            <img className=\"PPC-RL-icon\" src={stats.icon} alt={stats.title} />\r\n            <h4 className=\"NM\">{l.split('/')[2]}</h4>\r\n        </a>\r\n    )\r\n})\r\n    return (\r\n        <div className=\"PPC-links-contaier\" >\r\n            {linksToShow}\r\n        </div>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n        \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null\r\n)(PostLinks)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport userIcon from '../../static/svg/userB.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PostQandA = (props) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n    const answerStyle = expanded ? {display: 'block'} : {display: 'none'}\r\n    return (\r\n        <div className=\"PPC-qanda-container\">\r\n            <Link to={`/user/${encodeURIComponent(props.qanda.userFrom.username)}`} className=\"PPC-qanda-header neutralize-link\">\r\n                <img className=\"PPC-user-icon\" src={userIcon} alt=\"user\" />\r\n                <p className=\"NM\">{props.qanda.userFrom.username}</p>\r\n            </Link>\r\n            <p className=\"PCC-qanda-content\">{props.qanda.question}</p>\r\n            <div className=\"PCC-qanda-answer-container\" style={answerStyle}>\r\n                <Link to={`/user/${encodeURIComponent(props.qanda.userFrom.username)}`} className=\"PPC-qanda-header neutralize-link\">\r\n                    <img className=\"PPC-user-icon\" src={userIcon} alt=\"user\" />\r\n                    <p className=\"NM\">{props.qanda.userTo.username}</p>\r\n                </Link>\r\n                <p className=\"PCC-qanda-content\">{props.qanda.answer}</p>\r\n            </div>\r\n            <div onClick={() => setExpanded(!expanded)} className=\"PCC-answer-toggle\">\r\n                {expanded ? 'hide answer' : 'show answer'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(PostQandA)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst NewFormContainer = (props) => {\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n\r\n    if (expanded) {\r\n        return (\r\n            <div className=\"form-wrapper\">\r\n                <div className=\"form-container\" style={{borderTopColor: props.pallette.color}}>\r\n                    <div onClick={() => setExpanded(!expanded)} className=\"expanded-overlay SWM\" style={{backgroundColor: props.pallette.color}}>\r\n                        <img src={props.pallette.shrinkIcon} className=\"overlay-image-expanded\" alt=\"shrink form\" />\r\n                    </div>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <div className=\"form-container HWM\" style={{borderTopColor: props.pallette.color}}>\r\n                    {props.children}\r\n            </div>\r\n            <div onClick={() => setExpanded(!expanded)} className=\"expand-overlay SWM\" style={{backgroundColor: props.pallette.color}}>\r\n                <img src={props.pallette.handshakeIcon} className=\"overlay-image\" alt=\"expand form\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//const mapStateToProps = (state) => {\r\n//\treturn {\r\n        \r\n//\t}\r\n//}\r\nexport default connect(\r\n    null\r\n)(NewFormContainer)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { FIND_POST, Q_AND_A_NOTIFS, MAKE_NOTIFICATION, ASK_QUESTION } from '../../schemas'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../Loading'\r\nimport '../../static/css/newPostPage.css'\r\nimport userIcon from '../../static/svg/userB.svg'\r\nimport PostImages from '../postPage/PostImages'\r\nimport PostLinks from '../postPage/PostLinks'\r\nimport PostQandA from './PostQandA'\r\nimport InputHeader from '../InputHeader'\r\nimport NewFormContainer from '../NewFormContainer'\r\nimport { setAlert, resetAlert } from '../../reducers/alertNotif'\r\nimport { useField, triggerAlert, palletteGenerator } from '../../hooks/index'\r\n\r\nconst PostPage = (props) => {\r\n    const [currentPost, setCurrentPost] = useState(null)\r\n    const [skillExpanded, setSkillExpanded] = useState(null)\r\n    const question = useField('text')\r\n    const message = useField('text')\r\n    const onJoinError = (e) => {\r\n        if (e.message.includes('is longer than the maximum allowed length')) {\r\n            triggerAlert('warning', `message$: message of ${message.fields.value.length} characters exceeded the maximum of 800 characters.`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    const onQuestionError = (e) => {\r\n        if (e.message.includes('is longer than the maximum allowed length')) {\r\n            triggerAlert('warning', `question$: question of ${question.fields.value.length} characters exceeded the maximum of 800 characters.`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n\r\n    const [makeNotification] = useMutation(MAKE_NOTIFICATION, {\r\n        onError: onJoinError\r\n    })\r\n    const [askQuestion] = useMutation(ASK_QUESTION, {\r\n        onError: onQuestionError\r\n    })\r\n    \r\n    const qandaQuery = useQuery(Q_AND_A_NOTIFS, {\r\n        variables: {title: decodeURIComponent(props.postTitle)}\r\n    })\r\n    const postQuery = useQuery(FIND_POST, {\r\n        variables: {title: decodeURIComponent(props.postTitle)}\r\n    })\r\n    const qandaChangeConditions = () => {\r\n        const query = qandaQuery.data.searchAnsweredQToPost\r\n        const reducer = currentPost\r\n        if (!query) return null\r\n        if (!reducer) return null\r\n        if (reducer.qanda) return null\r\n        return query\r\n    }\r\n    const postChangeConditions = () => {\r\n        const query = postQuery.data.findPost\r\n        const reducer = currentPost\r\n        if (!query) return null\r\n        if (reducer) return null\r\n        return query\r\n    }\r\n    const qanda = qandaChangeConditions()\r\n    const post = postChangeConditions()\r\n    useEffect(() => {\r\n        if (qanda) {\r\n            setCurrentPost({...currentPost, qanda})\r\n        }\r\n        if (post) {\r\n            setCurrentPost(post)\r\n        }\r\n    }, [qanda, post, setCurrentPost, currentPost])\r\n    if (!currentPost || !currentPost.qanda) {\r\n        return <Loading />\r\n    }\r\n\r\n    let cleanedTime = new Date(Number(currentPost.time))\r\n    cleanedTime = cleanedTime.toString().split(' ')\r\n    // cleanedTime = cleanedTime.slice(1,4).join(' ') + ' ' + cleanedTime[4].split(':').slice(0,2).join(':')\r\n    cleanedTime = cleanedTime.slice(1,3).join(' ') + ', ' + cleanedTime[3]\r\n\r\n    let qandaList = currentPost.qanda.map(i => <PostQandA qanda={i} key={`QandA${i.question}`} />)\r\n    qandaList = qandaList.length ? qandaList : <div className=\"qanda-text\">no question and answer pairs yet</div>\r\n    const skillsHTML = []\r\n    const questionStyle = skillExpanded ? {display: 'none'} : {display: 'block'}\r\n    const handleNotification = async (proposedContribution) => {\r\n        if (!props.currentUser) {\r\n            triggerAlert('warning', `sign in$: must be signed in to perform this action`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (!message.fields.value.length) {\r\n            triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        const result = await makeNotification({\r\n            variables: {\r\n                userFromId: props.currentUser._id,\r\n                userToId: currentPost.user._id,\r\n                message: message.fields.value,\r\n                postId: currentPost._id,\r\n                proposedContribution\r\n            }\r\n        })\r\n        if (result) {\r\n            setSkillExpanded(null)\r\n            message.reset()\r\n            triggerAlert('success', `sent$: request has been sent to ${currentPost.user.username}`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    for (const ins in currentPost.skillNames) {\r\n        const skillName = currentPost.skillNames[ins]\r\n        const skillFill = currentPost.skillFills[ins]\r\n        const skillCap = currentPost.skillCapacities[ins]\r\n        const messageStyle = skillExpanded === skillName ? {display: 'block'} : {display: 'none'}\r\n        const buttonToShown = skillExpanded === skillName ?\r\n            <h4 onClick={() => setSkillExpanded(null)} className=\"PPS-button-exit\">X</h4>\r\n            :\r\n            skillFill < skillCap ?\r\n                <h4 onClick={() => setSkillExpanded(skillName)} className=\"PPS-button\">join</h4>\r\n                :\r\n                <h4 className=\"PPS-button-disabled\">join</h4>\r\n\r\n        const skillProposition = Array(currentPost.skillNames.length).fill(0)\r\n        skillProposition[ins] = 1\r\n        skillsHTML.push( \r\n            <div className=\"PPS-skill\" key={`PPSS${skillName}`}>\r\n                <div className=\"PPS-division\" />\r\n                <p className=\"PPS-skill-name\">{skillName}</p>\r\n                <div className=\"PPS-skill-secondary\">\r\n                    <p className=\"PPS-skill-info\">{skillFill}/{skillCap}</p>\r\n                    {buttonToShown}\r\n                </div>\r\n                <div className=\"PPS-skill-form\" style={messageStyle}>\r\n                    <div className=\"PPS-title\">\r\n                        <InputHeader inputFor=\"PPS-message\" info={false} title=\"message\" color=\"white\" />\r\n                    </div>\r\n                    <div className=\"PPS-input-container\">\r\n                        <textarea className=\"PPS-input\" id=\"PPS-message\" {...message.fields}></textarea>\r\n                    </div>\r\n                    <div className=\"PPC-submit-container\">\r\n                        {<h4 onClick={() => handleNotification(skillProposition)} className=\"PPS-button\" style={{borderColor: currentPost.color}}>join</h4>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleQuestion = async () => {\r\n        if (!props.currentUser) {\r\n            triggerAlert('warning', `sign in$: must be signed in to perform this action`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (!question.fields.value.length) {\r\n            triggerAlert('warning', `question$: question field is required`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        const result = await askQuestion({\r\n            variables: {\r\n                userFromId: props.currentUser._id,\r\n                userToId: currentPost.user._id,\r\n                postId: currentPost._id,\r\n                question: question.fields.value\r\n            }\r\n        })\r\n        if (result) {\r\n            question.reset()\r\n            triggerAlert('success', `sent$: question has been sent to ${currentPost.user.username}`, props.setAlert, props.resetAlert)\r\n        }\r\n    }\r\n    const pallette = palletteGenerator(currentPost.color).colorPallette\r\n\r\n    const teamHTML = currentPost.team.map(un =>\r\n        <Link to={`/user/${un}`} className=\"PPC-user-container neutralize-link\">\r\n            <img className=\"PPC-user-icon\" src={userIcon} alt=\"user\" />\r\n            <p className=\"NM\">{un}</p>\r\n        </Link>\r\n    )    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-height\" />\r\n            <div className=\"post-page-container\">\r\n                <div className=\"PP-content\">\r\n                    <h2 className=\"PPC-title\">{currentPost.title}</h2>\r\n                    <div className=\"PPC-sub-header\">\r\n                        <Link to={`/user/${currentPost.user.username}`} className=\"PPC-user-container neutralize-link\">\r\n                            <img className=\"PPC-user-icon\" src={userIcon} alt=\"user\" />\r\n                            <p className=\"NM\">{currentPost.user.username}</p>\r\n                        </Link>\r\n                        <p className=\"PPC-time\">{cleanedTime}</p>\r\n                    </div>\r\n                    <p className=\"PPC-description\">{currentPost.description}</p>\r\n                    <PostImages imageLinks={currentPost.imageLinks} color={currentPost.color} />\r\n                    <PostLinks referenceLinks={currentPost.referenceLinks} />\r\n                    <h3 className=\"PPC-title\">Q and A</h3>\r\n                    <div className=\"PPC-all-qanda-container\">\r\n                        {qandaList}\r\n                    </div>\r\n                    <h3 className=\"PPC-title\">team</h3>\r\n                    <div className=\"team-info\">{teamHTML.length} team members</div>\r\n                    <div className=\"PPC-team-container\">\r\n                        {teamHTML}\r\n                    </div>\r\n                </div>\r\n                <NewFormContainer pallette={pallette}>\r\n                            <div  className=\"PPS-follow-header\" >\r\n                                <div className=\"PPS-follow-header\" style={{borderTop: '2px solid currentPost.color'}}>\r\n                                    <svg className=\"PPC-user-icon\" fill={currentPost.color} viewBox=\"0 -28 512.00002 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m471.382812 44.578125c-26.503906-28.746094-62.871093-44.578125-102.410156-44.578125-29.554687 0-56.621094 9.34375-80.449218 27.769531-12.023438 9.300781-22.917969 20.679688-32.523438 33.960938-9.601562-13.277344-20.5-24.660157-32.527344-33.960938-23.824218-18.425781-50.890625-27.769531-80.445312-27.769531-39.539063 0-75.910156 15.832031-102.414063 44.578125-26.1875 28.410156-40.613281 67.222656-40.613281 109.292969 0 43.300781 16.136719 82.9375 50.78125 124.742187 30.992188 37.394531 75.535156 75.355469 127.117188 119.3125 17.613281 15.011719 37.578124 32.027344 58.308593 50.152344 5.476563 4.796875 12.503907 7.4375 19.792969 7.4375 7.285156 0 14.316406-2.640625 19.785156-7.429687 20.730469-18.128907 40.707032-35.152344 58.328125-50.171876 51.574219-43.949218 96.117188-81.90625 127.109375-119.304687 34.644532-41.800781 50.777344-81.4375 50.777344-124.742187 0-42.066407-14.425781-80.878907-40.617188-109.289063zm0 0\"/></svg>\r\n                                    <p className=\"NM\">follow</p>\r\n                                </div>\r\n                            </div>\r\n                            {skillsHTML}\r\n                            <div style={questionStyle}>\r\n                                <div className=\"PPS-division\" />\r\n                                <div className=\"PPS-title\">\r\n                                    <InputHeader inputFor=\"PPS-question\" info={true} title=\"question\" color=\"white\" >\r\n                                        <ul style={{margin: 0}}>\r\n                                            <li>if answered it will be shown on post</li>\r\n                                        </ul>\r\n                                    </InputHeader>\r\n                                </div>\r\n                                <div className=\"PPS-input-container\">\r\n                                    <textarea className=\"PPS-input\" id=\"PPS-question\" {...question.fields}></textarea>\r\n                                </div>\r\n                                <div className=\"PPC-submit-container\">\r\n                                    <h4 onClick={() => handleQuestion()} className=\"PPS-button\" style={{borderColor: currentPost.color}}>ask</h4>\r\n                                </div>\r\n                            </div>\r\n                </NewFormContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps, \r\n    { setAlert, resetAlert }\r\n)(PostPage)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { LIST_OF_POSTS } from '../../schemas'\r\nimport PostSmall from '../post/PostSmall'\r\nimport Loading from '../Loading'\r\n\r\nconst PostSmallList = (props) => {\r\n    const [posts, setPosts] = useState(null)\r\n    const postListQuery = useQuery(LIST_OF_POSTS, {\r\n        variables: {id_list: props.posts.map(p => p._id)}\r\n    })\r\n    const queryConditions = () => {\r\n        const query = postListQuery.data.getListOfPosts\r\n        const reducer = posts\r\n        if (!query) return null\r\n        if (!reducer) return query\r\n        return null\r\n    }\r\n      \r\n    const postList = queryConditions()\r\n    useEffect(() => {\r\n        if (postList) {\r\n            setPosts(postList)\r\n        }\r\n    }, [postList, props.setPostsForUFP, props])\r\n    if (!posts) return (\r\n            <div style={{gridColumn: '1/3'}}>\r\n                <div style={{height: '0vh'}}/>\r\n                <Loading />\r\n            </div>\r\n    )\r\n    if (posts && posts.length > 0) {\r\n        if (!posts[0].title) {\r\n            return (\r\n                <div style={{gridColumn: '1/3'}}>\r\n                    <div style={{height: '0vh'}}/>\r\n                    <Loading />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const postListReady = posts.map(p => <PostSmall post={p} user={p.user.username} key={`PSL${p.title}`} />)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {postListReady}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n// \treturn {\r\n//         \r\n// \t}\r\n// }\r\nexport default connect(\r\n    null\r\n)(PostSmallList)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { FIND_USER, MAKE_NOTIFICATION } from '../../schemas'\r\nimport { setAlert, resetAlert } from '../../reducers/alertNotif'\r\nimport '../../static/css/userPage.css'\r\nimport PostSmallList from '../post/PostSmallList'\r\nimport Loading from '../Loading'\r\nimport NewFormContainer from '../NewFormContainer'\r\nimport userIcon from '../../static/svg/userB.svg'\r\nimport { palletteGenerator, websiteStats, useField, triggerAlert } from '../../hooks/index'\r\n\r\nconst UserPage = (props) => {\r\n    const [currentUser, setCurrentUser] = useState(null)\r\n    const message = useField('text')\r\n    const userQuery = useQuery(FIND_USER, {\r\n      variables: {username: decodeURIComponent(props.userUsername)}\r\n    })\r\n\r\n    const onError = (e) => {\r\n      const eMessage = e.message\r\n      if (eMessage.includes('Path `message` (')) {\r\n        triggerAlert('warning', `message$: message of ${message.fields.value.length} characters cannot be more than 800 characters`, props.setAlert, props.resetAlert)\r\n      }\r\n    }\r\n    const [sendMessage] = useMutation(MAKE_NOTIFICATION, {\r\n      onError\r\n    })\r\n    const handleMessage = async (proposedContribution) => {\r\n      if (!message.fields.value.length) {\r\n        triggerAlert('warning', `message$: message field is required`, props.setAlert, props.resetAlert)\r\n        return null\r\n      }\r\n      const result = await sendMessage({\r\n          variables: {\r\n              userFromId: props.currentUser._id,\r\n              userToId: currentUser._id,\r\n              message: message.fields.value,\r\n          }\r\n      })\r\n      if (result) {\r\n          message.reset()\r\n          triggerAlert('success', `sent: message has been sent to ${currentUser.username}`, props.setAlert, props.resetAlert)\r\n      }\r\n  }\r\n\r\n    const userConditions = () => {\r\n      const query = userQuery.data.findUser\r\n      const reducer = currentUser\r\n      if (!query) return null\r\n      if (!reducer) return query\r\n      return null\r\n    }\r\n\r\n    const user = userConditions()\r\n    useEffect(() => {\r\n      if (user) {\r\n        setCurrentUser(user)\r\n      }\r\n    }, [user, setCurrentUser])\r\n    if (!currentUser) {\r\n      return (\r\n        <div>\r\n            <div style={{height: '15vh'}}/>\r\n            <Loading />\r\n        </div>\r\n      )\r\n    }\r\n    const pallette = palletteGenerator(\"rgb(40,40,40)\").colorPallette\r\n    const websiteInfo = websiteStats(currentUser.referenceLink)\r\n    return (\r\n        <div className=\"userPage-container\">\r\n          <div className=\"navbar-height\" style={{gridColumn: '1/3'}} />\r\n          <div className=\"UP-content\">\r\n            <div className=\"UP-title-container\">\r\n              <img className=\"UP-title-icon\" src={userIcon} alt=\"user\" />\r\n              <h2 className=\"UP-title\">{currentUser.username}</h2>\r\n            </div>\r\n            <h3 className=\"UP-title\" style={{opacity: '0.8'}}>reference link</h3>\r\n            <div className=\"UP-RL-container\">\r\n              <div className=\"UP-RL\" style={{backgroundColor: websiteInfo.color}}>\r\n                <div className=\"UP-RL-icon-container\" style={{backgroundColor: websiteInfo.color}}>\r\n                  <img src={websiteInfo.icon} className=\"UP-RL-icon\" alt={websiteInfo.title} />\r\n                </div>\r\n                <a className=\"UP-RL-link neutralize-link\" href={currentUser.referenceLink} style={{border: `2px solid ${currentUser.color}`}}>{currentUser.referenceLink}</a>\r\n              </div>\r\n            </div>\r\n            <h2 className=\"UP-title\">posts</h2>\r\n            <div className=\"UP-posts-container\">\r\n              <PostSmallList posts={currentUser.posts} />\r\n            </div>\r\n          </div>\r\n            <NewFormContainer pallette={pallette} >\r\n                  <h3 className=\"form-title\">contact {currentUser.username}</h3>\r\n                  <h4 className=\"form-title-secondary\">message</h4>\r\n                  <div className=\"form-field-container\">\r\n                    <textarea className=\"form-field\" {...message.fields} />\r\n                  </div >\r\n                  <div className=\"form-submit-button-container\">\r\n                    \r\n                  <h4 onClick={() => handleMessage()} className=\"form-submit-button\">send</h4>\r\n                  </div>\r\n            </NewFormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n    currentUser: state.currentUser        \r\n\t}\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {setAlert, resetAlert}\r\n)(UserPage)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useMutation } from '@apollo/react-hooks'\r\nimport { CREATE_POST } from '../../schemas'\r\nimport { useField } from '../../hooks/index'\r\nimport '../../static/css/postForm.css'\r\nimport { palletteGenerator } from '../../hooks/index'\r\nimport { setSkillProposition } from '../../reducers/skillProposition'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { websiteStats } from '../../hooks/index'\r\nimport InputHeader from '../InputHeader'\r\nimport { setAlert, resetAlert } from '../../reducers/alertNotif'\r\nimport { triggerAlert } from '../../hooks/index'\r\n\r\nlet PostFormPage = (props) => {\r\n    const title = useField('text')\r\n    const description = useField('text')\r\n    const [color, setColor] = useState(null)\r\n    const groupContactLink = useField('url')\r\n\r\n    const [skillName, setSkillName] = useState('')\r\n    const [skillNameList, setSkillNameList] = useState([])\r\n    const [skillCapacity, setSkillCapacity] = useState('')\r\n    const [skillCapList, setSkillCapList] = useState([])\r\n    const [imageLink, setImageLink] = useState('')\r\n    const [imageLinkList, setImageLinkList] = useState([])\r\n    const [referenceLink, setReferenceLink] = useState('')\r\n    const [referenceLinkList, setReferenceLinkList] = useState([])\r\n\r\n    const [skillProposition, setSkillProposition] = useState(null)\r\n    const [skillSelected, setSkillSelected] = useState(null)\r\n    // This is a test for form validation\r\n    const handleError = (e) => {\r\n        const message = e.message\r\n        console.log(message)\r\n        if (message.includes('Response not successful')) {\r\n           triggerAlert('warning', 'all$: title, description, color, group/contact link, skills, and contribution are all required', props.setAlert, props.resetAlert)\r\n           return null \r\n        }\r\n        if (message.includes('Path `title` (')) {\r\n            triggerAlert('warning', `title$: title of ${title.fields.value.length} characters must only have at most 100 characters`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('dup key: { title')) {\r\n            triggerAlert('warning', `title$: ${title.fields.value} is not unique. Title must be unique`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('duplicate description')) {\r\n            console.log('duplicate Des')\r\n            triggerAlert('warning', `description$: description is not unique. Description must be unique`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('minimum allowed length')) {\r\n            triggerAlert('warning', `description$: description of ${description.fields.value.length} characters must at least have 100 characters`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('Path `description` (')) {\r\n            triggerAlert('warning', `description$: description of ${description.fields.value.length} characters must only have at most 1500 characters`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (message.includes('duplicate contactLink')) {\r\n            console.log('duplicate CL')\r\n            triggerAlert('warning', `group/contact link$: ${groupContactLink.fields.value} is not unique. Group/contact link must be unique`, props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n    }\r\n    const [createPost] = useMutation( CREATE_POST, {\r\n        onError: handleError\r\n    })\r\n    useEffect(() => {\r\n        if (!props.skillProposition) {\r\n            props.setSkillProposition(Array(skillNameList.length).fill(0))\r\n        }\r\n    }, [props.setSkillProposition,skillNameList, props, props.skillProposition])\r\n    \r\n    const pallette = color ? palletteGenerator(color).colorPallette : {color: null, heigherColor: null}\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (!props.currentUser) {\r\n            triggerAlert('warning', 'sign in$: must be signed in to perform this action', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        if (!skillNameList.length || !groupContactLink.fields.value.length) {\r\n            triggerAlert('warning', 'all$: title, description, color, group/contact link, skills, and contribution are all required', props.setAlert, props.resetAlert)\r\n            return null\r\n        }\r\n        const postCreated = await createPost({\r\n            variables: {\r\n                title: title.fields.value,\r\n                user: props.currentUser._id,\r\n                skillNames: skillNameList,\r\n                skillCapacities: skillCapList,\r\n                skillFills: skillProposition,\r\n                description: description.fields.value,\r\n                contactLink: groupContactLink.fields.value,\r\n                color: color,\r\n                imageLinks: imageLinkList,\r\n                referenceLinks: referenceLinkList\r\n            }\r\n        })\r\n        if (postCreated) {\r\n            console.log(postCreated)\r\n            props.setSkillProposition(null)\r\n            title.reset()\r\n            description.reset()\r\n            groupContactLink.reset()\r\n            setSkillName('')\r\n            setSkillNameList([])\r\n            setSkillCapacity('')\r\n            setSkillCapList([])\r\n            setImageLink('')\r\n            setImageLinkList([])\r\n            setReferenceLink('')\r\n            setReferenceLinkList([])\r\n            props.history.push(`/post/${encodeURIComponent(postCreated.data.addPost.title)}`)\r\n        }\r\n    }\r\n    // \r\n    const colors = ['rgb(44,52,59)', 'rgb(15,138,95)', 'rgb(133,156,177)', 'rgb(224,52,77)', 'rgb(245,165,0)', 'rgb(1,152,173)', 'rgb(16,79,37)', 'rgb(152,183,49)', 'rgb(113,112,255)']\r\n    const colorsHTML = colors.map(c => <div onClick={() => setColor(c)} className=\"color-ins\" style={{backgroundColor: c}} key={`PFC${c}`} />)\r\n    const addSkills = () => {\r\n        if (Number(skillCapacity)){\r\n            setSkillNameList(skillNameList.concat(skillName.toLowerCase()))\r\n            setSkillName('')\r\n            setSkillCapList(skillCapList.concat(Number(skillCapacity)))\r\n            setSkillCapacity('')\r\n            props.setSkillProposition(props.skillProposition.concat(0))\r\n        }\r\n    }\r\n    const removeSkill = (ind) => {\r\n        const newSkillNameList = []\r\n        for (const i in skillNameList) {\r\n            if (i !== ind) { newSkillNameList.push(skillNameList[i]) }\r\n        }\r\n        setSkillNameList(newSkillNameList)\r\n        const newSkillCapList = []\r\n        for (const i in skillCapList) {\r\n            if (i !== ind) { newSkillCapList.push(skillCapList[i]) }\r\n        }\r\n        setSkillCapList(newSkillCapList)\r\n        const newSkillProposition = []\r\n        for (const i in props.skillProposition) {\r\n            if (i !== ind) { newSkillProposition.push(props.skillProposition[i]) }\r\n        }\r\n        props.setSkillProposition(newSkillProposition)\r\n    }\r\n    \r\n    const removeImage = (ind) => {\r\n        const newImageLinkList = []\r\n        for (const i in imageLinkList) {\r\n            if (i !== ind) { newImageLinkList.push(imageLinkList[i]) }\r\n        }\r\n        setImageLinkList(newImageLinkList)\r\n    }\r\n    \r\n    const addImage = () => {\r\n        if (imageLink.includes('https://') || imageLink.includes('http://')) {\r\n            setImageLinkList(imageLinkList.concat(imageLink))\r\n            setImageLink('')\r\n        }\r\n    }\r\n\r\n    const removeRL = (ind) => {\r\n        const newReferenceLinkList = []\r\n        for (const i in referenceLinkList) {\r\n            if (i !== ind) { newReferenceLinkList.push(referenceLinkList[i]) }\r\n        }\r\n        setReferenceLinkList(newReferenceLinkList)\r\n    }\r\n\r\n    const addRL = () => {\r\n        if (referenceLink.includes('https://') || referenceLink.includes('http://')) {\r\n            setReferenceLinkList(referenceLinkList.concat(referenceLink))\r\n            setReferenceLink('')\r\n        }\r\n    }\r\n\r\n    const skillsHTML = () => {\r\n        let skillsHTML = []\r\n        for (const ind in skillNameList) {\r\n            skillsHTML.push(\r\n                <div className=\"PF-skill-wrapper\" key={`PFS${skillNameList[ind]}`}>\r\n                    <div className=\"PF-skill-container\">\r\n                        <div className=\"PF-skill-name\">{skillNameList[ind]}</div>\r\n                        <div className=\"PF-skill-cap\">{skillCapList[ind]}</div>\r\n                    </div>\r\n                    <div className=\"PF-skill-remove\" onClick={() => removeSkill(ind)}>x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return skillsHTML\r\n    }\r\n\r\n    const skillContribution = () => {\r\n        if (!skillNameList.length) {\r\n            return <h4 className=\"PF-input-title\" style={{opacity: 0.7}}>must add skill first</h4>\r\n        }\r\n\r\n        const handleSkillSelect = (i, ) => {\r\n            const skillArray = Array(skillNameList.length).fill(0)\r\n            skillArray[i] = 1\r\n            console.log(skillArray)\r\n            setSkillProposition(skillArray)\r\n            setSkillSelected(skillNameList[i])\r\n        }\r\n\r\n        const skillMap = []\r\n        for (const i in skillNameList) {\r\n            const skillClass = skillSelected === skillNameList[i] ?\r\n                'skill-selected' : 'skill-normal'\r\n            skillMap.push(\r\n                <h4 onClick={() => handleSkillSelect(i, skillNameList[i])} className={skillClass} key={`SKILL${i}`}>{skillNameList[i]}</h4>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"skills-container\">\r\n                {skillMap}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const imagesHTML = () => {\r\n        const allImages = []\r\n        for (const ind in imageLinkList) {\r\n            allImages.push(\r\n                <div className=\"PF-image-display-container\" key={`IL${ind}`}>\r\n                    <img className=\"PF-image-display\" src={imageLinkList[ind]} alt={`(${imageLinkList[ind]}) failed to load`} key={`IL${imageLinkList[ind]}`} />\r\n                    <div onClick={() => removeImage(ind)} className=\"PF-skill-remove\" style={{height: '75px', lineHeight: '70px'}} >x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return allImages.map(img => img)\r\n    }\r\n\r\n    const referenceLinksHTML = () => {\r\n        const allRL = []\r\n        for (const ind in referenceLinkList) {\r\n            allRL.push(\r\n                <div className=\"PF-link-container\" key={`RL${ind}`}>\r\n                    <a href={referenceLinkList[ind]} className=\"PF-reference-link neutralize-link\">{referenceLinkList[ind].split('/')[2]}</a>\r\n                    <div onClick={() => removeRL(ind)} className=\"PF-skill-remove\" style={{lineHeight: '30px'}}>x</div>\r\n                </div>\r\n            )\r\n        }\r\n        return allRL.map(rl => rl)\r\n    }\r\n    const groupCommType = () => {\r\n        const siteStats = websiteStats(groupContactLink.fields.value)\r\n        return (\r\n            <React.Fragment>\r\n                <a className=\"GCL-type\" href={groupContactLink.fields.value} title={siteStats.title} style={{backgroundColor: siteStats.color}}><img className=\"GCL-image\" src={siteStats.icon} alt={siteStats.title} /></a>\r\n                <input className=\"PF-search-input-normal\" id=\"PF-GC-Link\" {...groupContactLink.fields} style={{marginBottom: 0, borderColor: siteStats.color}} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"post-form0-container\">\r\n            <div className=\"navbar-height\" />\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"post-form0-form\">\r\n                    <h1 className=\"pp-form-title\" style={{textAlign: 'start', marginLeft: 0}}>create post</h1>\r\n                    <InputHeader info={false} title=\"title\" color=\"white\" inputFor=\"PF-title\" />\r\n                    <input className=\"PF-search-input\" id=\"PF-title\" {...title.fields} />\r\n                    <InputHeader info={false} title=\"description\" color=\"white\" inputFor=\"PF-description\" />\r\n                    <textarea className=\"PF-search-input\" id=\"PF-description\" {...description.fields}  style={{height: '100px', width: '100%'}} />\r\n                    <InputHeader info={true} title=\"color\" color=\"white\" inputFor=\"\">\r\n                        <ul style={{margin: 0}}>\r\n                            <li>used sparingly to decorate the post</li>\r\n                        </ul>\r\n                    </InputHeader>\r\n                    <div className=\"PF-display-color\" style={{backgroundColor: pallette.color}} >\r\n                        <div className=\"PF-display-part\" style={{backgroundColor: pallette.color, color: pallette.textColor}}><h4 style={{margin: 'auto'}}>primary</h4></div>\r\n                        <div className=\"PF-display-part\" style={{backgroundColor: pallette.higherColor, color: pallette.textColor}}><h4 style={{margin: 'auto'}}>secondary</h4></div>\r\n                    </div>\r\n                    <div className=\"PF-input-colors\">\r\n                        {colorsHTML}\r\n                    </div>\r\n                    <InputHeader info={true} title=\"skills\" color=\"white\" inputFor=\"PF-skillName\">\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>skills needed to execute the project</p>\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>amount of people needed per skill</p>\r\n                    </InputHeader>\r\n                    <div>\r\n                        <div className=\"PF-skill-fields\">\r\n                            <input className=\"PF-search-input\" placeholder=\"skill name\" id=\"PF-skillName\" value={skillName} onChange={(e) => setSkillName(e.target.value)} type=\"text\" style={{marginBottom: 0}} />\r\n                            <input className=\"PF-search-input\" placeholder=\"amount of help\" value={skillCapacity} onChange={(e) => setSkillCapacity(e.target.value)} type=\"number\" style={{marginBottom: 0}} />\r\n                        </div>\r\n                        <h4 onClick={() => addSkills()} className=\"PF-field-submit standard-hover\">add skill</h4>               \r\n                    </div>\r\n                    {skillsHTML().map(s => s)}\r\n                    <InputHeader info={true} title=\"contribution\" color=\"white\" inputFor=\"\">\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>skill you contribute to the project</p>\r\n                    </InputHeader>\r\n                    {skillContribution()}\r\n                    <InputHeader info={true} title=\"group/contact link\" color=\"white\" inputFor=\"PF-GC-Link\">\r\n                        <p style={{margin: 0, marginBottom: '5px'}}>link shown to users who have been accepted to join the project</p>\r\n                        <ul style={{margin: 0}}>\r\n                            <li>group links recommended: <strong>Slack</strong>, <strong>Trello</strong>, <strong>Discord</strong>, or <strong>WhatsApp</strong></li>\r\n                        </ul>\r\n                    </InputHeader>\r\n                    <div className=\"GCL-input\">\r\n                        {groupCommType()}\r\n                    </div>\r\n                    <InputHeader info={false} title=\"images\" color=\"white\" inputFor=\"PF-imageLinks\" />\r\n                    <input className=\"PF-search-input\" type=\"url\" placeholder=\"image link\" id=\"PF-imageLinks\" value={imageLink} onChange={(e) => setImageLink(e.target.value)} style={{marginBottom: 0}} />\r\n                    <h4 onClick={() => addImage()} className=\"PF-field-submit standard-hover\">add image</h4>\r\n                    <div className=\"PF-images-container\">\r\n                        {imagesHTML()}\r\n                    </div>\r\n                    <InputHeader info={false} title=\"links\" color=\"white\" inputFor=\"PF-referenceLinks\" />\r\n                    <input className=\"PF-search-input\" type=\"url\" id=\"PF-referenceLinks\" value={referenceLink} onChange={(e) => setReferenceLink(e.target.value)} style={{marginBottom: 0}} />\r\n                    <h4 onClick={() => addRL()} className=\"PF-field-submit standard-hover\">add link</h4>\r\n                    {referenceLinksHTML()}\r\n                </div>\r\n                <button type=\"submit\" className=\"PF-submit standard-hover\"><h2 style={{margin: '5px'}}>create post</h2></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostFormPage = withRouter(PostFormPage)\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n        skillProposition: state.skillProposition,\r\n        currentUser: state.currentUser\r\n\t}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setSkillProposition, setAlert, resetAlert }\r\n)(PostFormPage)","import React, { useState, useEffect } from 'react'\nimport { setCurrentUser, setPendingNotifications } from './reducers/currentUser'\nimport { setToken } from './reducers/token'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks'\nimport NavBar from './components/NavBar'\nimport SubNav from './components/SubNav'\nimport Home from './components/pages/Home'\nimport Results from './components/pages/Results'\nimport PostPage from './components/newPostPage/PostPage'\nimport UserPage from './components/pages/UserPage'\nimport PostFormPage from './components/pages/PostFormPage'\nimport './static/css/base.css'\nimport './static/css/navBar.css'\nimport './static/css/newFormContainer.css'\nimport { FIND_USER, PENDING_NOTIFS } from './schemas'\n\nconst App = (props) => {\n  const [query, setQuery] = useState('')\n\n  const onQueryChange = (event) => {\n    setQuery(event.target.value)\n  }\n  if (localStorage.getItem('token') && props.token === null) {\n    props.setToken(localStorage.getItem('token'))\n  }\n  const currentUserId = props.currentUser ? props.currentUser._id : null\n  const pendingNotifsQuery = useQuery(PENDING_NOTIFS, {\n    variables:  {userId: currentUserId}\n  })\n  const userQuery = useQuery(FIND_USER, {\n    variables: {username: localStorage.getItem('username')}\n  })\n  const pendingNotifsConditions = () => {\n    if (!pendingNotifsQuery.data) return null\n    if (props.currentUser && props.currentUser.pendingNotifications) return null\n    return pendingNotifsQuery.data.searchAwaitingNotifs\n  }\n  const userConditions = (query, reducer) => {\n    if (!query.data) return null\n    if (!query.data.findUser) return null\n    if (reducer) return null\n    return query.data.findUser\n  }\n  const pendingNotifs = pendingNotifsConditions()\n  const user = userConditions(userQuery, props.currentUser)\n  useEffect(() => {\n    if (user) {\n      props.setCurrentUser(user)\n    }\n    if (pendingNotifs) {\n      props.setPendingNotifications(pendingNotifs)\n    }\n  }, [user, props.currentUser, props, pendingNotifs, props.setPendingNotifications])\n\n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <NavBar query={query} onQueryChange={onQueryChange} />\n        <SubNav />\n        <Route exact path=\"/\" render={() => <Home query={query} onQueryChange={onQueryChange} /> } />\n        <Route exact path=\"/browse/\" render={() => <Results query=\"\" /> } />\n        <Route path=\"/browse/:query\" render={({match}) => <Results query={match.params.query} /> } />\n        <Route path=\"/post-form/\" render={() => <PostFormPage /> } />\n        <Route path=\"/post/:title\" render={({match}) => <PostPage postTitle={match.params.title} /> } />\n        <Route path=\"/user/:username\" render={({match}) => <UserPage userUsername={match.params.username} /> } />\n      </Router>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    token: state.token,\n    posts: state.posts,\n    users: state.users,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { setCurrentUser, setToken, setPendingNotifications }\n)(App)","export const expandLogInContainer = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'EXPAND_LOGIN_CONTAINER',\r\n            data: true\r\n        })\r\n    }\r\n}\r\n\r\nexport const contractLogInContainer = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'CONTRACT_LOGIN_CONTAINER',\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport const setLogInContainer = (setLogInContainerTo) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_LOGIN_CONTAINER',\r\n            data: setLogInContainerTo\r\n        })\r\n    }\r\n}\r\n\r\nconst logInContainer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'EXPAND_LOGIN_CONTAINER' :\r\n            return action.data\r\n        case 'CONTRACT_LOGIN_CONTAINER' :\r\n            return action.data\r\n        case 'SET_LOGIN_CONTAINER' :\r\n            return action.data\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default logInContainer","export const initializeUsers = (posts) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'INIT_USERS',\r\n            data: posts\r\n        })\r\n    }\r\n}\r\n\r\nconst users = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'INIT_USERS':\r\n          return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default users","export const setCurrentUser = (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CURRENT_USER',\r\n            data: user\r\n        })\r\n    }\r\n}\r\n\r\nconst searchFilter = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_USER' :\r\n            return action.data\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default searchFilter","export const setCurrentPost = (post) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'SET_CURRENT_POST',\r\n            data: post\r\n        })\r\n    }\r\n}\r\n\r\nexport const editProposedHelp = (arr) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'EDIT_PROPOSED_HELP',\r\n            data: arr\r\n        })\r\n    }\r\n}\r\n\r\nconst currentPost = (state = null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_POST' :\r\n            const editedCurrentPost = {...action.data, proposedHelp: Array(action.data.skillCapacities.length).fill(0)}\r\n            return editedCurrentPost\r\n        case 'EDIT_PROPOSED_HELP' :\r\n            const currentProposedHelp = {...state, proposedHelp: action.data}\r\n            return currentProposedHelp\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default currentPost","import {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport token from './reducers/token'\r\nimport logInContainer from './reducers/logInContainer'\r\nimport currentUser from './reducers/currentUser'\r\nimport posts from './reducers/posts'\r\nimport users from './reducers/users'\r\nimport search from './reducers/search'\r\nimport searchFilter from './reducers/searchFilter'\r\nimport currentPost from './reducers/currentPost'\r\nimport skillProposition from './reducers/skillProposition'\r\nimport userForPage from './reducers/userForPage'\r\nimport alertNotif from './reducers/alertNotif'\r\nimport stretchLayout from './reducers/stretchLayout'\r\nimport eventSearch from './reducers/eventSearch'\r\n\r\nconst reducer = combineReducers({\r\n    token,\r\n    logInContainer,\r\n    currentUser,\r\n    posts,\r\n    users,\r\n    search,\r\n    searchFilter,\r\n    currentPost,\r\n    skillProposition,\r\n    userForPage,\r\n    alertNotif,\r\n    stretchLayout,\r\n    eventSearch,\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { ApolloClient } from 'apollo-client'\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n\nconst renderApp = () => {\n    const httpLink = createHttpLink({\n        uri: 'http://localhost:4000/',\n    })\n    \n    const authLink = setContext((_, { headers }) => {\n        const token = localStorage.getItem('token')\n        return {\n            headers: {\n                ...headers,\n                authorization: token ? `berySecret ${token}` : null,\n            }\n        }\n    })\n\n    const client = new ApolloClient({\n        link: authLink.concat(httpLink),\n        cache: new InMemoryCache()\n    })\n\n    return (\n            ReactDOM.render(\n                <ApolloProvider client={client}>\n                    <Provider store={store}>\n                        <App />\n                    </Provider>\n                </ApolloProvider>,\n                document.getElementById('root')\n            )\n    )\n}\n\nrenderApp()\n\nstore.subscribe(() => (\n    renderApp()\n))"],"sourceRoot":""}